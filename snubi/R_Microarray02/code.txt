###1. package setup ########
source("http://bioconductor.org/biocLite.R")
biocLite("affy")				# for analysis affy chip
biocLite("hgu133a.db")				# for annotation
biocLite("samr")				# for SAM

###2. package Loading ########
library(hgu133a.db)
library(affy) 
library(samr)

###3. 작업폴더 지정 ########
setwd("C:\\R_data\\") 
 
### 4. file loading ######
no = as.matrix(read.table("af_no.txt", header=TRUE,sep='\t')) # after normalization file loading 

### 5. grouping ######
l = c(1,1,1,2,2,2) 	# grouping 1 = cancer, 2 = normal
g = factor(l) 		# group 추출
t.test(no[1,] ~g) 	# sample t-testing 1 row

## 6. t-test #######
tp = vector() # p-value 담을 백터
tf = vector() # 추정값 담을 백터

for ( i in 1:nrow(no) )
{
     tmp = t.test(no[i,] ~g,paired = FALSE)				 # t-test 수행
     tf[i] <-(log2(tmp$estimate[1]/tmp$estimate[2])) # fold의 차이값
     tp[i] <-tmp$p.value 						 # p-value
}


id = which(tp < 0.05)		# p-value < 0.05 이하 값을 가진 probe의 위치
head(tp[id])			# 수행결과 확인
length(tp[id])			# p-value < 0.05 이하 값을 가진 probe의 갯수 확인


###### 7. FDR test ######
pfdr = p.adjust(tp, method="fdr") 	# FDR test
f.id = which(pfdr < 0.05)		# adjust p-value < 0.05 이하 값을 가진 probe의 위치
head(tf[f.id])				# 수행결과 확인
length(tf[f.id])			# adjust p-value  < 0.05 이하 값을 가진 probe의 갯수 확인
		# FDR 은 p-value < a 인 것들 중에 false positive 인 것들의 비율이 어느 정도인지를 나타내는 것

###### 8. volcano plot ######
plot(tf,-log10(tp))
points(tf[f.id],-log10(tp)[f.id],col="red")

####### 9. DEG result file write #########
f.no = cbind(no,tp,tf,pfdr) 	# expression matrix, t-test p-value, t-test estimation value, adjust p-value 값 table로 만들기
dep = f.no[f.id,]		# adjust p-value < 0.05 이하 값을 가진 probe의 위치
head(dep)			# 수행결과 확인
dim(dep)			# DEG 갯수 확인
write.table(dep,"ttest_fdr.txt",sep='\t',row.names=T)	# table write


########## 10. probe to gene annotation ##########
pid = row.names(no)[f.id]		# adjust p-value < 0.05 이하 값을 가진 probe의 명칭만 추출
gn = unlist(mget(pid[!is.na(pid)],hgu133aSYMBOL))	# annotation packagefh 로 부터 gene symbol - probe 이름 관계 추출하기 
deg = cbind(dep,gn)					# 기존 DEG table에 gene symbol 붙이기

head(deg)						# 수행결과 확인
degs = deg[order(deg[,9]), ]				# adjust-pvalue가 낮은 순으로 배열
write.table(degs,"deg.txt",sep='\t',row.names=T)	# 결과 파일로 쓰기

## 11. SAM analysis ###########
library(samr) 						# SAM package loading
sg = sub("0","2",l)					# grouping
sm= list(x = no, y= sg, logged2=TRUE)			# SAM input matrix
st = samr(sm,resp.type="Two class unpaired",nperm=100)	# sam test
dt = samr.compute.delta.table(st)			# delta table 작성 Computes tables of thresholds, cutpoints and corresponding False Discovery rates for SAM analysis
d = 1.30
samr.plot(st,d)						# SAM plot
st = samr.compute.siggenes.table(st,d,sm,dt)		# result table 작성
names(st)						# element 확인 
head(st$genes.up)					# 수행결과 확인
write.table(st$genes.up,"sam.txt",sep='\t',row.names=T)	# 결과 파일로 쓰기

