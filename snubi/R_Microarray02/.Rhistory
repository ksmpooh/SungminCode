#library(hgu113a.db)
library(hgu133plus2.db)
library(samr)
library(affy)
setwd("c:/Users/user/git/SungminCode/snubi/R_Microarray02/")
setwd("c:/Users/user/git/SungminCode/snubi/R_Microarray02/")
no <- as.matrix(read.table("af_no.txt",header = TRUE, sep = '\t'))
mode(no)
head(no)
l = c(1,1,1,2,2,2)
g = factor(l)
t.test(no[1,]~g) #
tp = vector()
tf = vector()
tmp = t.test(no[i,]~g,paired = F)
for(i in 1:nrow()){
tmp = t.test(no[i,]~g,paired = F)
tf[i] = log2(tmp$estimate[1] / tmp$estimate[2])
tp[i] = tmp$p.value
}
for(i in 1:nrow()){
tmp = t.test(no[i,]~g,paired = F)
tf[i] = log2(tmp$estimate[1] / tmp$estimate[2])
tp[i] = tmp$p.value
}
for(i in 1:nrow()){
tmp = t.test(no[i,] ~ g, paired = F)
tf[i] = log2(tmp$estimate[1] / tmp$estimate[2])
tp[i] = tmp$p.value
}
for(i in 1:nrow(no)){
tmp = t.test(no[i,] ~ g, paired = F)
tf[i] = log2(tmp$estimate[1] / tmp$estimate[2])
tp[i] = tmp$p.value
}
id = which(tp<0.05)
head(id)
length(id)
head(tp[id])
pfdr = p.adjust(tp, method = 'fdr')
f.id = which(pfdr<0.05)
head(f.idd)
head(f.id)
head(pfdr[f.id])
plot(tf, -log10(tp))
points(tf[f.id],-log10(tp)[f.id], col = 'red')
dep = f.no[f.id,]
f.no = cbind(no,tp,tf,pfdr)
dep = f.no[f.id,]
head(dep)
dim(dep)
write.table(dep,"ttest_fdr.txt",sep = "\t",row.names = T)
## probe를 gene symbol로 변환하기.
pid = row.names(no)[f.id]
gn = unlist(mget(pid[!is.na(pid)],hgu133plus2SYMBOL))
deg = cbind(dep,gn)
head(gn)
deg = cbind(dep,gn)
head(deg)
degs = deg[order(deg[,9]),]
write.table(degs,"deg.txt",sep = '\t', row.names = T)
sg = sub("0","2",1)
sg
sg = sub("1","1","1","2","2","2")
sg
sg = c("1","1","1","2","2","2")
sg
sm = list(x = no, y =sg, logged2 = TRUE)
sm
head(sm)
st = samr(sm,resp.type = "Two class unpaired",nperm = 100)
dt = samr.compute.delta.table(st)
head(dt)
d = 1.30
samr.plot(st,d)
st = samr.compute.siggenes.table(st,d,sm,dt)
names(st)
head(st$genes.up)
names(st)
head(st$genes.up)
d = 1.30
samr.plot(st,d)
st = samr.compute.siggenes.table(st,d,sm,dt)
sg = c("1","1","1","2","2","2")
sg
sm = list(x = no, y =sg, logged2 = TRUE)
st = samr(sm,resp.type = "Two class unpaired",nperm = 100)
dt = samr.compute.delta.table(st)
head(dt)
samr.plot(st,d)
d = 1.30
st = samr.compute.siggenes.table(st,d,sm,dt)
names(st)
head(st$genes.up)
head(sm)
