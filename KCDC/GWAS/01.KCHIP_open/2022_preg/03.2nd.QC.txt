# 20221124
#103
/BDATA/smkim/preg/00.rawData
# geno call 준비

cd /BDATA/smkim/preg/00.rawData

cut -d"/" -f 7 preg.cel.files.txt > only.NIH.ID/preg.cel.file.celname.txt

header 지우고

cat 1st.qc.out.txt only.NIH.ID/preg.cel.file.celname.txt |sort |uniq -c | awk '$1==1{print $2}' > preg.2ndQC.cel.files.txt


header 수정 : 1. full path 설정  2. line1 에 celfiles 추가

/BDATA/smkim/preg/00.rawData/CEL/

/BDATA/smkim/preg/00.rawData/preg.2ndQC.cel.files.txt



## geno call 진행
cd /BDATA/smkim/preg/01.genocall


sh geno.sh /BDATA/smkim/preg/00.rawData/preg.2ndQC.cel.files.txt /BDATA/smkim/preg/01.genocall/2nd/



## call to plink
cd /BDATA/smkim/preg/01.genocall/2nd/plink

/BDATA/smkim/preg/03.2ndQC/PREG.1stQC
plink --ped Axiom_KBAv1.1.ped --map Axiom_KBAv1.1.map --allow-extra-chr --no-fid --no-parents --no-sex --no-pheno --make-bed --out /BDATA/smkim/preg/03.2ndQC/PREG.2ndQC



#진행중====================

# snpolisher
 plink --bfile PREG.2ndQC --extract /BDATA/smkim/preg/01.genocall/2nd/classification/Recommended.ps --make-bed --out PREG.2ndQC_snpolisher


plink --bfile PREG.2ndQC_snpolisher --missing --out MISS
plink --bfile PREG.2ndQC_snpolisher --het --out HET



setwd("/Volumes/DATA/KCHIPQC/PREG/1st/")
#setwd("~/")
miss <-read.table("MISS.imiss",header = T)
het <- read.table("HET.het", header = T)


miss <- cbind(miss, CR=((1 - miss$F_MISS)*100))
het <- cbind(het, HET=((het$N.NM. - het$O.HOM.)/het$N.NM.)*100)

lowSample <- merge(miss, het, by="FID")

#pdf("../PDF/KKY.1st_missing-het.pdf", height = 7, width = 10)
#png("KKY.1stQC.PCA.png", height = 800, width = 800)
plot(lowSample$HET, lowSample$F_MISS, 
     xlim=c(12,24), ylim=c(0,0.15), 
     xlab="heterozygosity rate",
     ylab="missing rate", main="PREG 1stQC missing-het", col=rgb(0,0,1,0.5), cex=1, pch=16)
abline(v=15.5, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(v=17.2, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(h=0.03, col=rgb(1,0,0,1), lty=3, lwd=2)
points(lowSample[lowSample$HET < 15.5 | 17.2 < lowSample$HET | 0.03 < lowSample$F_MISS,]$HET,
       lowSample[lowSample$HET < 15.5 | 17.2 < lowSample$HET | 0.03 < lowSample$F_MISS,]$F_MISS,
       col=rgb(1,0,0,1), cex=1, pch=16)
dev.off()


rmList <- lowSample[0.03 < lowSample$F_MISS | lowSample$HET < 15.5 | 17.2 < lowSample$HET,]
write.table(rmList[,c(1:2)], "rmLQsamples.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)
dim(rmList)
head(rmList)


###server

miss <-read.table("MISS.imiss",header = T)
het <- read.table("HET.het", header = T)
lowSample <- merge(miss, het, by="FID")
rmList <- lowSample[0.03 < lowSample$F_MISS | lowSample$HET < 15.5 | 17.2 < lowSample$HET,]
write.table(rmList[,c(1:2)], "rmLQsamples.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)
dim(rmList)


#진행중====================

mkdir PCA1
cd PCA1


plink --bfile ../PREG.2ndQC_snpolisher --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/chr6_14_rm.txt --maf 0.1 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.02 --chr 1-22 --out PCA1_pruning

plink --bfile ../PREG.2ndQC_snpolisher --extract PCA1_pruning.prune.in --make-bed --out PCA1_pruned
flashpca_x86-64 --bfile PCA1_pruned --outpc PCA1.txt





mkdir PCA2
cd PCA2

plink --bfile ../PREG.2ndQC_snpolisher --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/chr6_14_rm.txt --maf 0.2 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.02 --chr 1-22 --out PCA2_pruning

plink --bfile ../PREG.2ndQC_snpolisher --extract PCA2_pruning.prune.in --make-bed --out PCA2_pruned
flashpca_x86-64 --bfile PCA2_pruned --outpc PCA2.txt




### PCA1 선택
setwd("/Volumes/DATA/KCHIPQC/PREG/2nd/")
#setwd("~/")
pca <- read.table("PCA1.txt", header=T)
#pca <- read.table("PCA2.txt", header=T)

#pdf("./PREG.2nd.QC_PCA2.pdf", height = 10, width = 10)
plot(pca$PC1, pca$PC2, col=rgb(0,0,1,0.5),
               xlim=c(-0.5, 0.5), ylim=c(-0.5,0.5),
     xlab="PC1", ylab="PC2", main="PREG 2ndQC PCA", cex=0.7, pch=16)
abline(v=-0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(v=0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=-0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)

points(pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]$PC1,
       pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]$PC2,
       col=rgb(1,0,0,0.7), cex=0.7, pch=16)

dev.off()
rmList <- pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]
dim(rmList)
write.table(rmList[,c(1:2)], "rmPCA.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)



### 서버
pca <- read.table("./PCA1/PCA1.txt", header=T)
rmList <- pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]
write.table(rmList[,c(1:2)], "rmPCA.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)


####


plink --bfile PREG.2ndQC_snpolisher --remove rmPCA.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA


plink --bfile PREG.2ndQC_snpolisher_rmPCA --exclude /BDATA/smkim/GWAS/01.QCed_INPUTs/affy_snp_list.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy

python2 /BDATA/smkim/GWAS/01.QCed_INPUTs/SCRIPTs/indel/indelChange.py /BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt PREG.2ndQC_snpolisher_rmPCA_rmaffy PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel


plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel --flip /BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.Flip.rmID.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip

python2 /BDATA/smkim/GWAS/01.QCed_INPUTs/SCRIPTs/01_select_dupID.py PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip



plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip --exclude case_duplicateSNPID.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup

### 1KGP


mkdir ethnic 
cd ethnic
plink --bfile ../PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup --maf 0.01 --geno 0.05 --hwe 0.001 --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic
python2 /BDATA/smkim/GWAS/01.QCed_INPUTs/SCRIPTs/02.updateSNPIDtype.py PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic.bim /BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.REF.txt


cat PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic.updateSNPID.bim /BDATA/smkim/GWAS/01.QCed_INPUTs/1KGP/1kgp_merge.bim | awk '{print $2}' | sort | uniq -c | awk '$1 ==2 {print $2}' > intersectSNP.txt

plink --bfile  PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic.updateSNPID --extract intersectSNP.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic.updateSNPID_intersect

plink --bfile /BDATA/smkim/GWAS/01.QCed_INPUTs/1KGP/1kgp_merge --extract intersectSNP.txt  --make-bed --out 1kpg_merge_intersect


plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_forEthnic.updateSNPID_intersect --bmerge 1kpg_merge_intersect --allow-no-sex --make-bed --out MERGE

python2 /BDATA/smkim/GWAS/01.QCed_INPUTs/SCRIPTs/03.select_snpID_500K_distance.py MERGE.bim
plink --bfile MERGE --extract 500K_distance_SNP_list.txt --make-bed --out MERGE_500K

flashpca_x86-64 --bfile MERGE_500K --outpc PCA_ethnic.txt




###R
library(tidyverse)
setwd("/Volumes/DATA/KCHIPQC/PREG/2nd/")
#setwd("~/")

#setwd("~/Desktop/KCDC/transplantation/QCrepliation_2020/LD/2nd/")
pca <- read.table("PCA_ethnic.txt",header = T)
#pca <- read.table("PCA.txt",header = T)
samplegnomad<- read.table("~/Desktop/KCDC/transplantation/ethical/1000GP_Phase3.sample",header = T)
head(samplegnomad)
case <- pca %>% select("FID") %>% filter(grepl("NIH",FID))
#case <- pca %>% select("FID")

#control <- tera %>% select("FID")
case$FID <- as.factor(case$FID)
#control$FID <- as.factor(control$FID)

gnomad <- subset(samplegnomad,select = c("ID","GROUP"))
colnames(gnomad) <- c("FID","GROUP")
case$GROUP <- "CASE"
#control$GROUP <- "CONTROL"
table(df$GROUP)
df <- rbind(gnomad,case)
#df <- rbind(df,control)
head(df)
df <- merge(pca,df,by = "FID")
#png("JG.LD.ethnic.PCA.png",height = 800,width = 800)
#png("KKY.7th.ethnic.PCA_east.png",height = 800,width = 800)
plot(df$PC1,df$PC2,col = rgb(1,1,1,0.1),xlab = "PC1",ylab = "PC2",main="PREG Ethnic PCA",
     #     xlim = c(-0.2,0.2),ylim = c(-0.2,0.2),
     #cex.main = 1,
     cex = 1,pch = 16
)
points(df[df$GROUP == "AFR",]$PC1,df[df$GROUP == "AFR",]$PC2,col = rgb(0,0,1,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "AMR",]$PC1,df[df$GROUP == "AMR",]$PC2,col = rgb(1,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EUR",]$PC1,df[df$GROUP == "EUR",]$PC2,col = rgb(1,0,1,0.5), cex = 0.7 , pch = 16)

points(df[df$GROUP == "SAS",]$PC1,df[df$GROUP == "SAS",]$PC2,col = rgb(0,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EAS",]$PC1,df[df$GROUP == "EAS",]$PC2,col = rgb(0,1,1,0.5), cex = 0.7 , pch = 16)
#points(df[df$GROUP == "CONTROL",]$PC1,df[df$GROUP == "CONTROL",]$PC2,col = rgb(0,0,0,1), cex = 0.7 , pch = 16)
points(df[df$GROUP == "CASE",]$PC1,df[df$GROUP == "CASE",]$PC2,col = rgb(1,0,0,0.5), cex = 0.7 , pch = 16)
abline(v=-0.12, col=rgb(1,0,0,0.5), lty=3, lwd=2)

color <- c(
  #  rgb(0,0,0,1),
  rgb(1,0,0,1),
  rgb(0,1,0,1),
  rgb(0,0,1,1),
  rgb(1,1,0,1),
  rgb(0,1,1,1),
  rgb(1,0,1,1))

list <- c("CASE","SAS","AFR","AMR","EAS","EUR")

legend("topright",list,col = color,cex = 0.8,pch = 16,pt.cex = 0.5)
#legend("bottomright",list,col = color,cex = 1,pch = 16)
#legend(y = -0.05,x=-0.15,list,col = color,cex = 1,pch = 16)

legend("bottom",c("# of Markers : 5,214"),box.lwd = 0,box.col = "white",bg = "white")
dev.off()


#rmList <- df[df$PC1 > -0.07 & df$GROUP == "CASE",]
rmList <- pca[pca$PC1 > -0.12 & grepl(".CEL",pca$IID),]

dim(rmList)
rmList
rmList$plate <- str_split_fixed(rmList$IID,"_",6)
table(str_split_fixed(rmList$IID,"_",6)[,4])

write.table(rmList[,c(1:2)], "rmPCA.ethnic.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)
###
R

pca <- read.table("PCA_ethnic.txt",header = T)
rmList <- pca[pca$PC1 > -0.12 & grepl(".CEL",pca$IID),]
write.table(rmList[,c(1:2)], "rmPCA.ethnic.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)



############

plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup --remove ethnic/rmPCA.ethnic.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA

awk '{split($1,a,"_"); split(a[6],b,"."); print $1,$1,b[1],b[1]}' PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA.fam > sampleID.update.txt
plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA --update-ids sampleID.update.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID


plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID --maf 0.01 --geno 0.05 --hwe 1e-6 --chr 1-22 --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_fil


##### sex chr QC
genome@genome103:/BDATA/smkim/preg/03.2ndQC$ head preg.sample.txt
NIH20G2818314 NIH20G2818314 2
NIH20G2399419 NIH20G2399419 2
NIH20G2733498 NIH20G2733498 2
NIH20G2090270 NIH20G2090270 2
NIH20G2284864 NIH20G2284864 2
NIH20G2556433 NIH20G2556433 2
NIH20G2954863 NIH20G2954863 2
NIH20G2720514 NIH20G2720514 2
NIH20G2368920 NIH20G2368920 2
NIH20G2832780 NIH20G2832780 2



cd /BDATA/smkim/preg/03.2ndQC
mkdir sex_chr
cp preg.sample.txt ./sex_chr/



plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID --update-sex ./sex_chr/preg.sample.txt --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX

cd /BDATA/smkim/preg/03.2ndQC/sex_chr

plink --bfile ../PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX --chr 23,25 --make-bed --out PREG.preQC.chrX
plink --bfile PREG.preQC.chrX --chr 23 --from-bp 2699521 --to-bp 154931043 --make-bed --out PREG.preQC.chrX_nonPAR

plink --bfile PREG.preQC.chrX_nonPAR --geno 0.05 --maf 0.01 --hwe 1e-6 --make-bed --out PREG.preQC.chrX_nonPAR.fil


plink --bfile PREG.preQC.chrX --exclude PREG.preQC.chrX_nonPAR.bim --make-bed --out PREG.preQC.chrX_PAR
plink --bfile PREG.preQC.chrX_PAR --merge-x --make-bed --out PREG.preQC.chrX_PAR_mergeX
plink --bfile PREG.preQC.chrX_PAR_mergeX --maf 0.01 --hwe 1e-6 --geno 0.05 --make-bed --out PREG.preQC.chrX_PAR_mergeX_fil



plink --bfile ../PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX --chr 24,26 --make-bed --out PREG.preQC.chrY_MIT
plink --bfile PREG.preQC.chrY_MIT --geno 0.05 --make-bed --out PREG.preQC.chrY_MIT_geno


plink --bfile PREG.preQC.chrX_PAR_mergeX_fil --bmerge PREG.preQC.chrX_nonPAR.fil --make-bed --out PREG.preQC.chrX_PARmerge_QCed
plink --bfile PREG.preQC.chrX_PARmerge_QCed --bmerge PREG.preQC.chrY_MIT_geno --make-bed --out PREG.preQC.chr23-26.QCed



cd /BDATA/smkim/preg/03.2ndQC

plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX --chr 1-22 --maf 0.01 --hwe 1e-6 --geno 0.05 --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX_fil

plink --bfile PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX_fil --bmerge sex_chr/PREG.preQC.chr23-26.QCed --make-bed --out PREG.2ndQC_snpolisher_rmPCA_rmaffy_indel_flip_rmdup_rmEthnicPCA_updateID_updateSEX_FINALQCed