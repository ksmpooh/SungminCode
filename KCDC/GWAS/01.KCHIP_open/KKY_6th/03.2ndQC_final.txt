genome@genome109:/BDATA/smkim/KKY_6th/01.genocall/2nd/plink$ 
plink --ped Axiom_KBAv1.1.ped --map Axiom_KBAv1.1.map --allow-extra-chr --no-fid --no-parents --no-sex --no-pheno --make-bed --out /BDATA/smkim/KKY_6th/03.QC_2nd/KKY6th.All.2nd


/BDATA/smkim/KKY_6th/03.QC_2nd
plink --bfile KKY6th.All.2nd --extract /BDATA/smkim/KKY_6th/01.genocall/2nd/classification/Recommended.ps --make-bed --out KKY6th.All.2nd_snpolisher

plink --bfile KKY6th.All.2nd_snpolisher --missing --out MISS
plink --bfile KKY6th.All.2nd_snpolisher --het --out HET


setwd("/Volumes/DATA/KKY/6th/2nd/")
setwd("~/")
miss <-read.table("MISS.imiss",header = T)
het <- read.table("HET.het", header = T)
dim(het)

miss <- cbind(miss, CR=((1 - miss$F_MISS)*100))
het <- cbind(het, HET=((het$N.NM. - het$O.HOM.)/het$N.NM.)*100)

lowSample <- merge(miss, het, by="FID")

#pdf("../PDF/KKY.1st_missing-het.pdf", height = 7, width = 10)
#png("KKY.1stQC.PCA.png", height = 800, width = 800)
plot(lowSample$HET, lowSample$F_MISS, 
     xlim=c(13,22), ylim=c(0,0.1), 
     xlab="heterozygosity rate",
     ylab="missing rate", main="KKY.6th.2ndQC ALL missing-het", col=rgb(0,0,1,0.3), cex=1.5, pch=16)
abline(v=15.5, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(v=17.5, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(h=0.03, col=rgb(1,0,0,1), lty=3, lwd=2)
points(lowSample[lowSample$HET < 15.5 | 17.5 < lowSample$HET | 0.03 < lowSample$F_MISS,]$HET,
       lowSample[lowSample$HET < 15.5 | 17.5 < lowSample$HET | 0.03 < lowSample$F_MISS,]$F_MISS,
       col=rgb(1,0,0,0.3), cex=1.5, pch=16)
legend("topright",title="15.5< HET<17.5",box.lwd = 0,box.col = "white",bg = "white",cex = 1,
        legend = c("MISS < 0.03\n outliner : 1 "))
dev.off()

rmList <- lowSample[0.03 < lowSample$F_MISS | lowSample$HET < 15.5 | 17.5 < lowSample$HET,]
dim(rmList)
write.table(rmList[,c(1:2)], "rmLQsamples.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)



plink --bfile KKY6th.All.2nd_snpolisher --remove rmLQsamples.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample



plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample --exclude /BDATA/smkim/JG/02.QC_1st/INPUTs/chr6_14_rm.txt --maf 0.25 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.01 --chr 1-22 --out KKY6th.All.2nd_snpolisher_rmLQsample_pruning
plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample --extract KKY6th.All.2nd_snpolisher_rmLQsample_pruning.prune.in --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_pruned

cd KING
king -b ../KKY6th.All.2nd_snpolisher_rmLQsample_pruned.bed --prefix KKY6th.2nd_pruning --degree 2 --related


Relationship summary (total relatives: 0 by pedigree, 1778 by inference)
        	MZ	PO	FS	2nd
  =====================================================
  Inference	3	1447	247	80




plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --maf 0.01 --geno 0.05 --make-bed --out ./KKY6th.All.2nd_snpolisher_rmLQsample_forking


Relationship summary (total relatives: 0 by pedigree, 1778 by inference)

        	MZ	PO	FS	2nd
  =====================================================
  Inference	3	1447	247	80


## v5  선택
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --maf 0.1 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.1 --exclude /BDATA/smkim/JG/02.QC_1st/INPUTs/chr6_14_rm.txt --chr 1-22 --out KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v5
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --extract KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v5.prune.in --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v5
flashpca_x86-64 --bfile KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v5 --outpc PCA.v5.txt

## v6
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --maf 0.1 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.1 --chr 1-5,7-13,15-22 --out KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v6
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --extract KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v6.prune.in --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v6
flashpca_x86-64 --bfile KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v6 --outpc PCA.v6.txt


## bad plate 추출후 다시 분석
setwd("/Volumes/DATA/KKY/6th/2nd/")
setwd("~/")

pca <- read.table("PCA.v6.txt", header=T)
pca <- read.table("PCA.txt", header=T)

#pca <- read.table("PCA.v6.txt", header=T)
pca <- read.table("PCA.v8.txt", header=T)
dev.off()
head(pca)
par(mfrow=c(1, 2))
#pdf("../PDF/KKY.1st.QC_PCA.pdf", height = 10, width = 10)
plot(pca$PC1, pca$PC2, col=rgb(0,0,1,0.5),
     xlim=c(-0.8, 0.2), ylim=c(-0.5,0.5),
     #xlim=c(-0.4, 0.2), ylim=c(-0.5,0.2),
     xlab="PC1", ylab="PC2", main="KKY 6th 2ndQC PCA", cex=0.6, pch=16)
abline(v=-0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(v=0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=-0.1, col=rgb(1,0,0,0.5), lty=3, lwd=2)
points(pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]$PC1,
       pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]$PC2,
       col=rgb(1,0,0,0.6), cex=0.6, pch=16)
legend(box.lwd = 0,box.col = "white",bg = "white",cex = 0.5,
       x = 0.07,y=-0.2,
       legend = c("-0.1< PCA1 <0.1\n-0.1< PCA2 <0.1\n Pruning SNP : 40960\nMAF:0.1, HWE 0.001,geno:0.01\nindep-pairwise 50 5 0.1\n rm chr6-14 snplist"))

dev.off()

rmList2 <- pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]
rmList <- pca[pca$PC1 < -0.08 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]

rmList$plate <- str_split_fixed(rmList$IID,"_",6)
table(str_split_fixed(rmList$IID,"_",6)[,4])

pca$plate <- str_split_fixed(rmList$IID,"_",6)
table(str_split_fixed(pca$IID,"_",6)[,4])


bad_plate <- rmList[grep("034006",rmList$FID),]
table(str_split_fixed(bad_plate$IID,"_",6)[,4])
bad_plate$ID <- str_replace_all(str_split_fixed(bad_plate$IID,"_",6)[,6],".CEL","")
head(bad_plate)
dim(rmList[grep("NIH19",rmList$FID),])
dim(rmList[grep("NIH20",rmList$FID),])
dim(rmList[grep("NIH21",rmList$FID),])

bad_plate <- rmList[grep("*034006*",rmList$FID),]
bad_plate
#write.table(bad_plate[,c(1:2)], "rm_bad_plate_PCA.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)


q()


####

## v8 bad plate 제거 후 재분석
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --maf 0.2 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.01 --remove badplate.V1.txt --chr 1-5,7-13,15-22 --out KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v8
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --extract KKY6th.All.2nd_snpolisher_rmLQsample_pruning_v8.prune.in --remove badplate.V1.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v8
flashpca_x86-64 --bfile KKY6th.All.2nd_snpolisher_rmLQsample_pruned_v8 --outpc PCA.v8.txt


##
pca <- read.table("PCA.v8.txt", header=T)
rmList2 <- pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]
write.table(rmList2[,c(1:2)], "rmPCA.v8.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)




#### ethnic marker


#plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --maf 0.01 --geno 0.05 --hwe 0.001 --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/affy_snp_list.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy

plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/affy_snp_list.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/01_select_dupID.py KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy --exclude case_duplicateSNPID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup

#python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/ConvertToBim.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.txt KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_convert
#python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/indelChange.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_convert KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_convert_indel

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/indelChange.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel --flip /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.Flip.rmID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip


### pca



python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/02.updateSNPIDtype.py KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip.bim /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.REF.txt


cat KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip.updateSNPID.bim /BDATA/smkim/JG/03.QC_2nd/OUTPUTs/1kgp/1kgp_merge.bim | awk '{print $2}' | sort | uniq -c | awk '$1 ==2 {print $2}' > intersectSNP.txt

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip.updateSNPID --extract intersectSNP.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip.updateSNPID_intersect
plink --bfile /BDATA/smkim/JG/03.QC_2nd/OUTPUTs/1kgp/1kgp_merge --extract intersectSNP.txt  --make-bed --out 1kpg_merge_intersect


plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmaffy_rmdup_indel_flip.updateSNPID_intersect --bmerge 1kpg_merge_intersect --make-bed --out MERGE

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/03.select_snpID_500K_distance.py MERGE.bim
plink --bfile MERGE --extract 500K_distance_SNP_list.txt --make-bed --out MERGE_500K

flashpca_x86-64 --bfile MERGE_500K --outpc PCA.txt



library(tidyverse)
setwd("/Volumes/DATA/KKY/6th/2nd/Ethnic/")
setwd("~/")

#setwd("~/Desktop/KCDC/transplantation/QCrepliation_2020/LD/2nd/")
#pca <- read.table("PCA_ethnic.txt",header = T)
pca <- read.table("PCA.txt",header = T)
samplegnomad<- read.table("~/Desktop/KCDC/transplantation/ethical/1000GP_Phase3.sample",header = T)
head(samplegnomad)
case <- pca %>% select("FID") %>% filter(grepl("NIH",FID))
#case <- pca %>% select("FID")

#control <- tera %>% select("FID")
case$FID <- as.factor(case$FID)
#control$FID <- as.factor(control$FID)

gnomad <- subset(samplegnomad,select = c("ID","GROUP"))
colnames(gnomad) <- c("FID","GROUP")
case$GROUP <- "CASE"
#control$GROUP <- "CONTROL"
table(df$GROUP)
df <- rbind(gnomad,case)
#df <- rbind(df,control)
head(df)
df <- merge(pca,df,by = "FID")
png("JG.LD.ethnic.PCA.png",height = 800,width = 800)
#png("KKY.7th.ethnic.PCA_east.png",height = 800,width = 800)
plot(df$PC1,df$PC2,col = rgb(1,1,1,0.1),xlab = "PC1",ylab = "PC2",main="Ethnic PCA",
          xlim = c(-0.2,0.2),ylim = c(-0.2,0.2),
     cex.main = 3,cex = 1,pch = 16
)
points(df[df$GROUP == "AFR",]$PC1,df[df$GROUP == "AFR",]$PC2,col = rgb(0,0,1,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "AMR",]$PC1,df[df$GROUP == "AMR",]$PC2,col = rgb(1,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EUR",]$PC1,df[df$GROUP == "EUR",]$PC2,col = rgb(1,0,1,0.5), cex = 0.7 , pch = 16)

points(df[df$GROUP == "SAS",]$PC1,df[df$GROUP == "SAS",]$PC2,col = rgb(0,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EAS",]$PC1,df[df$GROUP == "EAS",]$PC2,col = rgb(0,1,1,0.5), cex = 0.7 , pch = 16)
#points(df[df$GROUP == "CONTROL",]$PC1,df[df$GROUP == "CONTROL",]$PC2,col = rgb(0,0,0,1), cex = 0.7 , pch = 16)
points(df[df$GROUP == "CASE",]$PC1,df[df$GROUP == "CASE",]$PC2,col = rgb(1,0,0,0.5), cex = 0.7 , pch = 16)
abline(v=-0.07, col=rgb(1,0,0,0.5), lty=3, lwd=2)

color <- c(
        #  rgb(0,0,0,1),
        rgb(1,0,0,1),
        rgb(0,1,0,1),
        rgb(0,0,1,1),
        rgb(1,1,0,1),
        rgb(0,1,1,1),
        rgb(1,0,1,1))

list <- c("KKY","SAS","AFR","AMR","EAS","EUR")

legend("topright",list,col = color,cex = 1,pch = 16)
legend("bottomright",list,col = color,cex = 1,pch = 16)
#legend(y = -0.05,x=-0.15,list,col = color,cex = 1,pch = 16)

legend("bottom",c("# of Markers : 5087"),box.lwd = 0,box.col = "white",bg = "white")
dev.off()


#rmList <- df[df$PC1 > -0.07 & df$GROUP == "CASE",]
rmList <- pca[pca$PC1 > -0.07 & grepl(".CEL",pca$IID),]

dim(rmList)
rmList
rmList$plate <- str_split_fixed(rmList$IID,"_",6)
table(str_split_fixed(rmList$IID,"_",6)[,4])

write.table(rmList[,c(1:2)], "rmPCA.ethnic.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)

############ rm sample check




library(tidyverse)
library(stringr)

setwd("/Volumes/DATA/KKY/6th/2nd/")
setwd("~/")
pca <- read.table("PCA.v6.txt", header=T)
rmList <- pca[pca$PC1 < -0.08 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]
bad_plate <- rmList[grep("034006",rmList$FID),]
head(bad_plate)
dim(bad_plate)

pca <- read.table("PCA.v8.txt", header=T)
rmList2 <- pca[pca$PC1 < -0.1 | 0.1 < pca$PC1 | pca$PC2 < -0.1 | 0.1 < pca$PC2,]

pca <- read.table("Ethnic/PCA.txt",header = T)
head(pca)
rmList1 <- pca %>% filter(PC1 > -0.07)
rmList1 <-rmList1[grep("*CEL*",rmList1$FID),]

df <- rbind(bad_plate,rmList2)

table(df$FID %in% rmList$FID)
table(rmList$FID %in% rmList1$FID)
table(rmList2$FID %in% rmList1$FID)




### PCA 분석에서서 저품질 샘플 제거

bad plate : 24
rmPCA.v8 : 36
ethnic : 8

=총 68


cd /BDATA/smkim/KKY_6th/03.QC_2nd

cat PCA.v78/badplate.V1.txt PCA.v78/rmPCA.v8.txt Ethnic/rmPCA.ethnic.txt > rmPCA.list.txt

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample --remove rmPCA.list.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA



남은 샘플 수 : 8217

#######marker QC


plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/affy_snp_list.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/01_select_dupID.py KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy --exclude case_duplicateSNPID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup

#python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/ConvertToBim.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.txt JG.LD.2nd_snpolisher_rmaffy_rmdup JG.LD.2nd_snpolisher_rmaffy_rmdup_convert
python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/indelChange.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel --flip /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.Flip.rmID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip --maf 0.01 --geno 0.05 --hwe 0.001 --chr 1-22 --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip_fil


awk '{split($1,a,"_"); split(a[6],b,"."); print $1,$1,b[1],b[1]}' KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip_fil.fam > sampleID.update.txt


plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip_fil --update-ids sampleID.update.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_rmdup_indel_flip_fil_updateID


######## marker QC 20220329 (reference allele 처리 안된것 처리)


python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/indelChange.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel


plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel --flip /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.Flip.rmID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/01_select_dupID.py KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip
plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip --exclude case_duplicateSNPID.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup --maf 0.01 --geno 0.05 --hwe 0.001 --chr 1-22 --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_fil


awk '{split($1,a,"_"); split(a[6],b,"."); print $1,$1,b[1],b[1]}' KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_fil.fam > sampleID.update.txt


plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_fil --update-ids sampleID.update.txt --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_fil_updateID





##### 20220509 sex chromosome 추가 작업

23, 25가 PAR 구분 잘 된건지 체크해주세요.
     non-PAR: X chromosome의 Chr23: 2,699,521-154,931,043	
     PAR: non-PAR외의 모든 지역

PAR 지역은 autosomal region의 QC와 동일합니다.
     그런데 HWE는 보통 1e-6으로 cut-off 했는데 이건 왜 0.001이죠? (이 수치는 보통 control 정보에서 많이 사용하는데)

non-PAR의 경우
     남성은 heterozygous를 set to missing 또는 homozygous 처리 (plink 메뉴얼 참조)
     여성은 autosomal region의 QC와 동일	
아마 non-PAR의 경우 성별 정보를 fam 파일이나 pheno에 잘 넣어두면 자동으로 hwe 체크나 missing 처리를 할겁니다. (로그 확인해보세요)

#KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID

Two simular commands (but that cannot be run at the same time as --update-ids) are
--update-sex myfile1.txt
that expects 3 columns per row:
     FID
     IID
     SEX    Coded 1/2/0 for M/F/missing


cd /BDATA/smkim/KKY_6th/00.rawData
R
df <- read.table("Sample.Info.2019",header =T)
df1 <- read.table("Sample.info.2020",header=T)
df2 <- read.table("2021.KKY.summary.info.20220311.txt",header=T)
df2 <- df2[df2$기수=="6th",]

df <- df[,c(1,2,5)]
df1 <- df1[,c(1,2,5)]
df2 <-df2[,c(1,1,3)]

colnames(df) <- c("FID","IID","SEX")
colnames(df1) <- c("FID","IID","SEX")
colnames(df2) <- c("FID","IID","SEX")

out <- rbind(df,df1)
out <- rbind(out,df2)
write.table(out,"KKY.6th.ALL.sampleINFO_20220509.txt",col.names=T,row.names=F,quote=F,sep="\t")
q()


cd /BDATA/smkim/KKY_6th
df <- read.table("00.rawData/Sample.Info.2019")
df1 <- read.table("00.rawData/kky.6th.2019pro.txt",header=T)
ref<-read.table("03.2ndQC/sex/plink.sexcheck",header=T)
out <- merge(ref,df1,by.x="IID",by.y="ID")
out[out$STATUS != "OK",c(1,3,4,5,10)]

### Y chromosome sex check
cd /BDATA/smkim/KKY_6th/03.2ndQC/sex.check


R
df <-read.table("check-sex.sexcheck",header=T)
ref <-read.table("y.txt.raw",header=T)

ref[ref$IID %in% df[df$STATUS != "OK",]$IID,]
write.table(ref[ref$IID %in% df[df$STATUS != "OK",]$IID,],"5sample.Y.SNP.txt",col.names=T,row.names=F,quote=F,sep = "\t")
###
##
#A PROBLEM arises if the two sexes do not match, or if the SNP data or pedigree data are ambiguous with regard to sex. A male call is made if F is more than 0.8; a femle call is made if F is less than 0.2.

cd /BDATA/smkim/KKY_6th/03.2ndQC/sex

plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 23-25 --make-bed --out KKY.6th.preQC.onlySEX
plink --bfile KKY.6th.preQC.onlySEX --chr 23 --from-bp 2699521 --to-bp 154931043 --make-bed --out KKY.6th.preQC.onlySEX_nonPAR
plink --bfile KKY.6th.preQC.onlySEX --exclude KKY.6th.preQC.onlySEX_nonPAR.bim --make-bed --out KKY.6th.preQC.onlySEX_PAR


plink --bfile KKY.6th.preQC.onlySEX_PAR --maf 0.01 --hwe 0.001 --geno 0.05 --make-bed --out KKY.6th.preQC.onlySEX_PAR_fil



## chr y
plink --bfile KKY.6th.preQC.onlySEX --chr 24 --make-bed --out KKY.6th.preQC.onlySEX_onlyCHRY
plink --bfile KKY.6th.preQC.onlySEX_onlyCHRY --geno 0.05 --make-bed --out KKY.6th.preQC.onlySEX_onlyCHRY_onlygeno

## non-PAR

## chr 26( mit)

plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 26 --make-bed --out KKY.6th.preQC.onlySEX_MIT
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 26 --geno 0.05 --make-bed --out KKY.6th.preQC.onlySEX_MIT_fil
plink --bfile KKY.6th.preQC.onlySEX_nonPAR_recode_hettohomo_reformat --maf 0.01 --geno 0.05 --hwe 0.001 --make-bed --out KKY.6th.preQC.onlySEX_nonPAR_recode_hettohomo_reformat_fil



########
wc -l
  
    180 KKY.6th.preQC.onlySEX_MIT.bim
    180 KKY.6th.preQC.onlySEX_MIT_fil.bim *
  23184 KKY.6th.preQC.onlySEX_nonPAR.bim
  18625 KKY.6th.preQC.onlySEX_nonPAR_fil.bim 
  23184 KKY.6th.preQC.onlySEX_nonPAR_onlygeno.bim
  23184 KKY.6th.preQC.onlySEX_nonPAR_recode_hettohomo_reformat.bim
  18624 KKY.6th.preQC.onlySEX_nonPAR_recode_hettohomo_reformat_fil.bim *
    861 KKY.6th.preQC.onlySEX_onlyCHRY.bim
     28 KKY.6th.preQC.onlySEX_onlyCHRY_fil.bim *
    861 KKY.6th.preQC.onlySEX_onlyCHRY_onlygeno.bim 
   2713 KKY.6th.preQC.onlySEX_PAR.bim (PAR + Y)
   1668 KKY.6th.preQC.onlySEX_PAR_fil.bim (PAR + Y)
  





#######
[오후 3:55] 김영진
    25번이 원래 있음 안되는건데, 이거 x에 포함을 해야해요 (--merge-x 사용)

https://www.cog-genomics.org/plink/1.9/data

--split-x <last bp position of head> <first bp position of tail> ['no-fail']
--split-x <build code> ['no-fail']
--merge-x ['no-fail']

​[오후 3:56] 김영진
    그리고 haploid error (nonPAR에 남자 hetero있는거 등)는 --set-hh-missing 해서 처리를 해야 bfile이 수정됩니다.
혹시 별도 처리 안했으면 output할때만 set-hh 해서 나오는거라 로그를 꼭 잘 봐야해요
​[오후 3:56] 김영진
    위의 --merge-x를 하면 23이랑 25랑 합쳐집니다

위에 Non-PAR의 경우 여자에서만 MAF, HWE 측정이 되어야하는데 로그 확인 좀 해주세요.
아 Y도 --set-hh-missing하면 알아서 정리 됩니다. (여성은 없는 정보로 처리) Y는 --geno만 하면 됩니다. mitochondria와 동일해요

plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 23-25 --make-bed --out KKY.6th.preQC.onlySEX
plink --bfile KKY.6th.preQC.onlySEX --chr 23 --from-bp 2699521 --to-bp 154931043 --make-bed --out KKY.6th.preQC.onlySEX_nonPAR
plink --bfile KKY.6th.preQC.onlySEX --exclude KKY.6th.preQC.onlySEX_nonPAR.bim --make-bed --out KKY.6th.preQC.onlySEX_PAR
plink --bfile KKY.6th.preQC.onlySEX_PAR --merge-x --make-bed --out KKY.6th.preQC.onlySEX_PAR_mergeX

plink --bfile KKY.6th.preQC.onlySEX_nonPAR --set-hh-missing --make-bed --out KKY.6th.preQC.onlySEX_nonPAR_sethhmissing

plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 26 --make-bed --out KKY.6th.preQC.onlySEX_MIT
plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 26 --geno 0.05 --make-bed --out KKY.6th.preQC.onlySEX_MIT_fil

#--maf 0.01 --geno 0.05 --hwe 0.001 --make-bed --out
plink --bfile KKY.6th.preQC.onlySEX_PAR_mergeX --maf 0.01 --geno 0.05 --hwe 0.001 --make-bed --out KKY.6th.preQC.onlySEX_PAR_mergeX_fil
plink --bfile KKY.6th.preQC.onlySEX_nonPAR_sethhmissing --maf 0.01 --geno 0.05 --hwe 0.001 --make-bed --out KKY.6th.preQC.onlySEX_nonPAR_sethhmissing_fil

plink --bfile KKY.6th.preQC.onlySEX_nonPAR_sethhmissing_fil --bmerge KKY.6th.preQC.onlySEX_PAR_mergeX_fil --make-bed --out KKY.6th.preQC.onlySEX_QCed
plink --bfile KKY.6th.preQC.onlySEX_QCed --bmerge KKY.6th.preQC.onlySEX_MIT_fil --make-bed --out KKY.6th.preQC.chr23-26.QCed



(남자+여자)18624 KKY.6th.preQC.onlySEX_nonPAR_sethhmissing_fil.bim
(여자만)  18569 KKY.6th.preQC.onlySEX_nonPAR_sethhmissing_onlyfemale.fil.bim



### sex Final


plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 23,25 --make-bed --out KKY.6th.preQC.chrX
plink --bfile KKY.6th.preQC.chrX --chr 23 --from-bp 2699521 --to-bp 154931043 --make-bed --out KKY.6th.preQC.chrX_nonPAR


awk '$5==2{print $1,$2}' KKY.6th.preQC.chrX.fam > female.txt
awk '$5==1{print $1,$2}' KKY.6th.preQC.chrX.fam > male.txt
plink --bfile KKY.6th.preQC.chrX_nonPAR --keep female.txt --maf 0.01 --hwe 0.001 --make-bed --out KKY.6th.preQC.chrX_nonPAR_onlyFemale.fil
plink --bfile KKY.6th.preQC.chrX_nonPAR --keep male.txt --set-hh-missing  --make-bed --out KKY.6th.preQC.chrX_nonPAR_onlyMale_sethhmissing
plink --bfile KKY.6th.preQC.chrX_nonPAR_onlyMale_sethhmissing --extract KKY.6th.preQC.chrX_nonPAR_onlyFemale.fil.bim --make-bed --out KKY.6th.preQC.chrX_nonPAR_onlyMale_sethhmissing_intersect

plink --bfile KKY.6th.preQC.chrX_nonPAR_onlyFemale.fil --bmerge KKY.6th.preQC.chrX_nonPAR_onlyMale_sethhmissing_intersect --make-bed --out KKY.6th.preQC.chrX_nonPAR_GenderMerge
plink --bfile KKY.6th.preQC.chrX_nonPAR_GenderMerge --geno 0.05 --make-bed --out KKY.6th.preQC.chrX_nonPAR_GenderMerge_geno


plink --bfile KKY.6th.preQC.chrX --exclude KKY.6th.preQC.chrX_nonPAR.bim --make-bed --out KKY.6th.preQC.chrX_PAR
plink --bfile KKY.6th.preQC.chrX_PAR --merge-x --make-bed --out KKY.6th.preQC.chrX_PAR_mergeX
plink --bfile KKY.6th.preQC.chrX_PAR_mergeX --maf 0.01 --hwe 0.001 --geno 0.05 --make-bed --out KKY.6th.preQC.chrX_PAR_mergeX_fil



plink --bfile ../KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 24,26 --make-bed --out KKY.6th.preQC.chrY_MIT
plink --bfile KKY.6th.preQC.chrY_MIT --geno 0.05 --make-bed --out KKY.6th.preQC.chrY_MIT_geno


plink --bfile KKY.6th.preQC.chrX_nonPAR_GenderMerge_geno --bmerge KKY.6th.preQC.chrX_PAR_mergeX_fil --make-bed --out KKY.6th.preQC.chrX_PARmerge_QCed
plink --bfile KKY.6th.preQC.chrX_PARmerge_QCed --bmerge KKY.6th.preQC.chrY_MIT_geno --make-bed --out KKY.6th.preQC.chr23-26.QCed



cd /BDATA/smkim/KKY_6th/03.2ndQC

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX --chr 1-22 --maf 0.01 --hwe 0.001 --geno 0.05 --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX_fil

plink --bfile KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX_fil --bmerge FIANL_sex/KKY.6th.preQC.chr23-26.QCed --make-bed --out KKY6th.All.2nd_snpolisher_rmLQsample_rmPCA_rmaffy_indel_flip_rmdup_updateID_updateSEX_FINALQCed