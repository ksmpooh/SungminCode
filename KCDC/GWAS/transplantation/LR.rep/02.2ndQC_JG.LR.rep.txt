# 2nd
cd /DATA/smkim/JG.LR.rep
1st : 867 sample -21
2nd : 846 sample

# genocall
#python2 DataPrep.py 0 50000 /LaCie2/KOTRY/00.summary/2020/Sample.Info.txt /BDATA/smkim/JG_2020/01.genocall/INPUTs/Axiom_KORV1_1.na35.annot.extract.txt /BDATA/smkim/JG.LR.rep/01.genotypecalling/2nd_re/
plink --file KNIH.RAW.0_50000 --merge-list ../INPUTs/mergeList.txt --make-bed --out /DATA/smkim/JG.LR.rep/03.2ndQC/JG.LR.rep.2nd
cd /DATA/smkim/JG.LR.rep/03.2ndQC

plink --bfile JG.LR.rep.2nd --extract /DATA/smkim/JG.LR.rep/01.genocall/2nd/Recommended.ps --make-bed --out JG.LR.rep.2nd_snpolisher
plink --bfile JG.LR.rep.2nd_snpolisher --missing --out MISS
plink --bfile JG.LR.rep.2nd_snpolisher --het --out HET

#지울거 없음


setwd("~/Desktop/KCDC/transplantation/QCrepliation_2020/LR.rep/2nd/")
miss <-read.table("MISS.imiss",header = T)
het <- read.table("HET.het", header = T)


miss <- cbind(miss, CR=((1 - miss$F_MISS)*100))
het <- cbind(het, HET=((het$N.NM. - het$O.HOM.)/het$N.NM.)*100)

lowSample <- merge(miss, het, by="FID")


pdf("JG.LR_rep.QC_SNPolisher_miss-het.pdf", height = 7, width = 10)
plot(lowSample$HET, lowSample$F_MISS, 
     xlim=c(13,23), ylim=c(0,0.1), 
     xlab="heterozygosity rate",ylab="missing rate", main="LR.rep 2nd Missing vs heterozygosity", col=rgb(0,0,1,0.3), cex=1.5, pch=16)
abline(v=16, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(v=17.5, col=rgb(1,0,0,1), lty=3, lwd=2)
abline(h=0.03, col=rgb(1,0,0,1), lty=3, lwd=2)
points(lowSample[lowSample$HET < 16 | 17.5 < lowSample$HET | 0.03 < lowSample$F_MISS,]$HET,
       lowSample[lowSample$HET < 16 | 17.5 < lowSample$HET | 0.03 < lowSample$F_MISS,]$F_MISS,
       col=rgb(1,0,0,0.3), cex=1.5, pch=16)
dev.off()

rmList <- lowSample[0.03 < lowSample$F_MISS | lowSample$HET < 16 | 17.5 < lowSample$HET,]
write.table(rmList[,c(1:2)], "rmLQSamples.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)


plink --bfile JG.LR.rep.2nd_snpolisher --remove rmLQSamples.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het
plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het --exclude /BDATA/smkim/JG/02.QC_1st/INPUTs/chr6_14_rm.txt --maf 0.1 --geno 0.01 --hwe 0.001 --indep-pairwise 50 5 0.02 --out JG.LR.rep.2nd_snpolisher_rmMissing-het_pruning --chr 1-22
plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het --extract JG.LR.rep.2nd_snpolisher_rmMissing-het_pruning.prune.in --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_pruned
flashpca_x86-64 --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_pruned --outpc PCA.txt



setwd("~/Desktop/KCDC/transplantation/QCrepliation_2020/LR.rep/2nd/")

pca <- read.table("PCA.txt", header=T)

head(pca)

#pdf("../PDF/JG.1st.QC_PCA.pdf", height = 10, width = 10)
pdf("./JG.LR.rep.2nd.QC_PCA.pdf", height = 10, width = 10)
plot(pca$PC1, pca$PC2, col=rgb(0,0,1,0.3),
     #xlim=c(-0.3, 0.3), ylim=c(-0.3,0.3),
          xlim=c(-1, 1), ylim=c(-1,1),
     xlab="PC1", ylab="PC2", main="LRrep 1stQC PCA", cex=1.5, pch=16)
abline(v=-0.2, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(v=0.2, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=0.2, col=rgb(1,0,0,0.5), lty=3, lwd=2)
abline(h=-0.2, col=rgb(1,0,0,0.5), lty=3, lwd=2)

points(pca[pca$PC1 < -0.2 | 0.2 < pca$PC1 | pca$PC2 < -0.2 | 0.2 < pca$PC2,]$PC1,
       pca[pca$PC1 < -0.2 | 0.2 < pca$PC1 | pca$PC2 < -0.2 | 0.2 < pca$PC2,]$PC2,
       col=rgb(1,0,0,0.3), cex=1.5, pch=16)
dev.off()

rmList <- pca[pca$PC1 < -0.2 | 0.2 < pca$PC1 | pca$PC2 < -0.2 | 0.2 < pca$PC2,]
dim(rmList)

write.table(rmList[,c(1:2)], "rmPCA.txt", col.names= FALSE, row.names=FALSE, sep="\t", quote=FALSE)



plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het --remove rmPCA.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA
plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/affy_snp_list.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/01_select_dupID.py JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy

plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy --exclude case_duplicateSNPID.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/ConvertToBim.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.txt JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert
python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/indel/indelChange.py /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel

plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel --flip /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.Flip.rmID.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel_flip



##
cd /BDATA/smkim/JG.LR.rep/03.2ndQC/ethnic


plink --bfile ../JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip --maf 0.01 --geno 0.05 --exclude /BDATA/smkim/JG/03.QC_2nd/INPUTs/chr6_14_rm.txt --chr 1-22 --make-bed --out JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil




python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/02.updateSNPIDtype.py JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil.bim /BDATA/smkim/JG/03.QC_2nd/INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.REF.txt


cat JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil.updateSNPID.bim /BDATA/smkim/JG/03.QC_2nd/OUTPUTs/1kgp/1kgp_merge.bim | awk '{print $2}' | sort | uniq -c | awk '$1 ==2 {print $2}' > intersectSNP.txt

plink --bfile JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil.updateSNPID --extract intersectSNP.txt --make-bed --out JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil.updateSNPID_intersect
plink --bfile /BDATA/smkim/JG/03.QC_2nd/OUTPUTs/1kgp/1kgp_merge --extract intersectSNP.txt  --make-bed --out 1kpg_merge_intersect


plink --bfile JG.LR.rep.2nd_snpolisher_rmaffy_rmdup_convert_indel_flip_fil.updateSNPID_intersect --bmerge 1kpg_merge_intersect --make-bed --out MERGE

python2 /BDATA/smkim/JG/03.QC_2nd/SCRIPTs/03.select_snpID_500K_distance.py MERGE.bim
plink --bfile MERGE --extract 500K_distance_SNP_list.txt --make-bed --out MERGE_500K

flashpca_x86-64 --bfile MERGE_500K --outpc PCA.txt



library(tidyverse)
setwd("~/Desktop/KCDC/transplantation/QCrepliation_2020/LR.rep/2nd/")
pca <- read.table("PCA_ethnic.txt",header = T)
samplegnomad<- read.table("~/Desktop/KCDC/transplantation/ethical/1000GP_Phase3.sample",header = T)

case <- pca %>% select("FID") %>% filter(grepl("^NIH",FID))

#control <- tera %>% select("FID")
case$FID <- as.factor(case$FID)
#control$FID <- as.factor(control$FID)

gnomad <- subset(samplegnomad,select = c("ID","GROUP"))
colnames(gnomad) <- c("FID","GROUP")
case$GROUP <- "CASE"
#control$GROUP <- "CONTROL"

df <- rbind(gnomad,case)
#df <- rbind(df,control)

df <- merge(pca,df,by = "FID")
png("JG.LR.rep.rep.ethnic.PCA.png",height = 800,width = 800)
#png("KKY.7th.ethnic.PCA_east.png",height = 800,width = 800)
plot(df$PC1,df$PC2,col = rgb(1,1,1,0.1),xlab = "PC1",ylab = "PC2",main="Ethnic PCA",
     #     xlim = c(-0.15,0.2),ylim = c(-0.15,0.15),
     cex.main = 3,cex = 1,pch = 16
)
points(df[df$GROUP == "AFR",]$PC1,df[df$GROUP == "AFR",]$PC2,col = rgb(0,0,1,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "AMR",]$PC1,df[df$GROUP == "AMR",]$PC2,col = rgb(1,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EUR",]$PC1,df[df$GROUP == "EUR",]$PC2,col = rgb(1,0,1,0.5), cex = 0.7 , pch = 16)

points(df[df$GROUP == "SAS",]$PC1,df[df$GROUP == "SAS",]$PC2,col = rgb(0,1,0,0.5), cex = 0.7 , pch = 16)
points(df[df$GROUP == "EAS",]$PC1,df[df$GROUP == "EAS",]$PC2,col = rgb(0,1,1,0.5), cex = 0.7 , pch = 16)
#points(df[df$GROUP == "CONTROL",]$PC1,df[df$GROUP == "CONTROL",]$PC2,col = rgb(0,0,0,1), cex = 0.7 , pch = 16)
points(df[df$GROUP == "CASE",]$PC1,df[df$GROUP == "CASE",]$PC2,col = rgb(1,0,0,0.5), cex = 0.7 , pch = 16)

color <- c(
  #  rgb(0,0,0,1),
  rgb(1,0,0,1),
  rgb(0,1,0,1),
  rgb(0,0,1,1),
  rgb(1,1,0,1),
  rgb(0,1,1,1),
  rgb(1,0,1,1))

list <- c("LR.rep","SAS","AFR","AMR","EAS","EUR")

legend("topright",list,col = color,cex = 1,pch = 16)
#legend(y = -0.05,x=-0.15,list,col = color,cex = 1,pch = 16)

legend("bottom",c("# of Markers : 5087"),box.lwd = 0,box.col = "white",bg = "white")
dev.off()


  


plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel_flip --maf 0.01 --geno 0.05 --chr 1-22 --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel_flip_fil
plink --bfile JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel_flip --geno 0.05 --chr 1-22 --make-bed --out JG.LR.rep.2nd_snpolisher_rmMissing-het_rmPCA_rmaffy_rmdup_convert_indel_flip_forOPEN
  

  
  
  
  
  
  
  
