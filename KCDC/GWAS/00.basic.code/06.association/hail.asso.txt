##
import hail as hl
'''
config = {
    'spark.driver.memory' : '100g', #local은 이것만 설정
    'spark.executor.memory' : '200g'
}
'''

hl.init(tmp_dir='./tmp',) ## spark memory option setting 400g

hl.init(spark_conf={'spark.driver.memory': '400g'})
## VCF sort / force_bgz

/ADATA/smkim/KBA_130K/05.imputation/

hl.import_vcf('/ADATA/smkim/KBA_130K/05.imputation/KCHIP130K_imputation_MERGED_QCed_addINDEL_rmSNP_rmMAF_chr22.vcf.gz.dose.vcf.bgz').write('/ADATA/smkim/KBA_130K/05.imputation/hail/KMCHP130K_8Kimp_chr22.mt', overwrite=True)
mt = hl.read_matrix_table("/ADATA/smkim/KBA_130K/05.imputation/hail/KMCHP130K_8Kimp_chr22.mt")
#mt = hl.variant_qc(mt)
mt = mt.filter_rows(mt.row.info.R2 >= 0.8)

table = (hl.import_table('/ADATA/smkim/KBA_130K/00.input/transformation_lipid_kchip130k_v1v2_20200414_forhail.ped',impute=True).key_by("IND_ID_IND_ID"))
mt = mt.annotate_cols(pheno=table[mt.s])

gwas = hl.linear_regression_rows(
    y=mt.pheno.LDL_z,
    x=mt.DS,
    covariates=[1.0, mt.pheno.SEX,mt.pheno.AGE])



##### chr merge and export hail mt
import hail as hl
hl.init(spark_conf={'spark.driver.memory': '400g'})

inDir = "/ADATA/smkim/KBA_130K/05.imputation/"
inVCF = inDir + "KCHIP130K_imputation_MERGED_QCed_addINDEL_rmSNP_rmMAF_chr%s.vcf.gz.dose.vcf.gz"%("1")
mt = hl.import_vcf(inVCF,force_bgz=True)
mt = mt.filter_rows(mt.row.info.R2 >= 0.8)

for i in range(2,22+1):
    inVCF = inDir + "KCHIP130K_imputation_MERGED_QCed_addINDEL_rmSNP_rmMAF_chr%s.vcf.gz.dose.vcf.gz"%str(i)
    df = hl.import_vcf(inVCF,force_bgz=True)
    df = df.filter_rows(df.row.info.R2 >= 0.8)
#    mt = mt.union_rows(df)

gwas = hl.linear_regression_rows(y=mt.pheno.,x=mt.DS,
            covariates=[1.0])


table = (hl.import_table('/ADATA/smkim/KBA_130K/00.input/transformation_lipid_kchip130k_v1v2_20200414_forhail.ped',impute=True).key_by("IND_ID_IND_ID"))

for i in range(1,22+1):
    inVCF = inDir + "KCHIP130K_imputation_MERGED_QCed_addINDEL_rmSNP_rmMAF_chr%s.vcf.gz.dose.vcf.gz"%str(i)
    inhailMT = inDir + 'hail/KMCHP130K_8Kimp_chr%s.mt'%str(i)
    #outAsso = "/ADATA/smkim/KBA_130K/06.asso/KCHIP130K_8Kimp_Asso_LDL_chr%s.txt"%(str(i))
    hl.import_vcf(inVCF,force_bgz=True).write(inhailMT, overwrite=True)
    mt = hl.read_matrix_table(inhailMT)
    mt = mt.filter_rows(mt.row.info.R2 >= 0.8)
    mt = mt.annotate_cols(pheno=table[mt.s])
    
    outAsso = "/ADATA/smkim/KBA_130K/06.asso/KCHIP130K_8Kimp_Asso_TC_z_chr%s.txt"%str(i)
    gwas = hl.linear_regression_rows(y=mt.pheno.TC_z,x=mt.DS,covariates=[1.0])
    gwas.export(outAsso)

    outAsso = "/ADATA/smkim/KBA_130K/06.asso/KCHIP130K_8Kimp_Asso_HDL_z_chr%s.txt"%str(i)
    gwas = hl.linear_regression_rows(y=mt.pheno.HDL_z,x=mt.DS,covariates=[1.0])
    gwas.export(outAsso)

    outAsso = "/ADATA/smkim/KBA_130K/06.asso/KCHIP130K_8Kimp_Asso_LDL_z_chr%s.txt"%str(i)
    gwas = hl.linear_regression_rows(y=mt.pheno.LDL_z,x=mt.DS,covariates=[1.0])
    gwas.export(outAsso)

    outAsso = "/ADATA/smkim/KBA_130K/06.asso/KCHIP130K_8Kimp_Asso_TG_logz_chr%s.txt"%str(i)
    gwas = hl.linear_regression_rows(y=mt.pheno.TG_logz,x=mt.DS,covariates=[1.0])
    gwas.export(outAsso)





#    df_rare = 
#    df_common


####
after asso

p-value, beta

ls *txt | sed 's/.txt//g' | xargs -I {} -P 22 bash -c "sh run.sh {}"
awk '$7>=0.8{print $1"\t"$5}' *info | grep -v "MAF" > all.info0.8.maf.txt
## R

library(tidyverse)
library(stringr)
library(data.table)

#setwd("/ADATA/smkim/KBA_130K/06.asso/parsing")

flist = grep(list.files("./"),pattern = ".info", value=TRUE)
flist

out <- NULL

for (i in 1:length(flist)) {
  df <- read_table(flist[i])
  df <- df %>% select(SNP,MAF,Rsq,Genotyped) %>% mutate(chrom=str_split_fixed(SNP,":",3)[,1])
  out <- rbind(out,df)
}

#HDL_z  #LDL_z  #TC_z  #TG_logz
df <- fread("KCHIP130K_8Kimp_Asso_TG_logz_chr22.p_beta.txt",header=T)
ref <-read_table("../../05.imputation/info/all.info0.8.maf.txt",col_names=c("SNP","MAF"))
df %>% mutate(SNP = paste0(locus,":",str_split_fixed(allele,)))
df %>% str_remove(alleles,"\\[") %>% head


df$alleles <- str_remove(df$alleles,"\\[")
df$alleles <- str_remove(df$alleles,"\\]")
df$alleles <- str_remove_all(df$alleles,"\"")
df <- df %>% mutate(SNP = paste0(locus,":",str_split_fixed(alleles,",",2)[1,],":",str_split_fixed(alleles,",",2)[2,])) %>% select(-locus,-alleles)
df %>% left_join(ref) %>% dim()

#/ADATA/smkim/KBA_130K/06.asso/merge



##
library(tidyverse)
library(stringr)
library(qqman)
library(miamiplot)

ref <-read_table("../../05.imputation/info/all.info0.8.maf.txt",col_names=c("SNP","MAF"))

phenos = c('HDL_z','LDL_z','TC_z','TG_logz')
for (pheno in phenos){
  print(pheno)
  out <- NULL
  flist = grep(list.files("./"),pattern = pheno, value=TRUE)
  
  for (i in 1:length(flist)) {
    df <- fread(flist[i])
    df$alleles <- str_remove(df$alleles,"\\[")
    df$alleles <- str_remove(df$alleles,"\\]")
    df$alleles <- str_remove_all(df$alleles,"\"")
    df <- df %>% mutate(SNP = paste0(locus,":",str_split_fixed(alleles,"\\,",2)[,1],":",str_split_fixed(alleles,"\\,",2)[,2])) %>% select(-locus,-alleles)
    out <- rbind(out,df)
  }
  out <- out %>% left_join(ref)
  write.table(out,paste0("../merge/",pheno,"_asso.allCHR.txt"),col.names=T,row.names=F,quote=F,sep="\t")
}

for (pheno in phenos) {
  df <- read_table(paste0("../merge/",pheno,"_asso.allCHR.txt"))
  df$CHR <- as.integer(str_split_fixed(df$SNP,":",4)[,1])
  df$BP <- as.double(str_split_fixed(df$SNP,":",4)[,2])
  df %>% na.omit() %>% filter(p_value != 0) %>% filter(MAF >= 0.01)-> df
  png(paste0("../merge/",pheno,"common.png"))
  manhattan(df, main = pheno, chr="CHR",bp="BP",snp="SNP",p="p_value",
            #ylim = c(0, 100), 
            cex = 0.6, cex.axis = 0.9,
            col = c("blue4", "orange3"), suggestiveline = T, genomewideline = T)
  dev.off()
  
}


for (pheno in phenos) {
  df <- read_table(paste0("../merge/",pheno,"_asso.allCHR.txt"))
  df$CHR <- as.integer(str_split_fixed(df$SNP,":",4)[,1])
  df$BP <- as.double(str_split_fixed(df$SNP,":",4)[,2])
  df %>% na.omit() %>% filter(p_value != 0) -> df
  png(paste0("../merge/",pheno,"miamiplot.png"))
  ggmiami(df %>% mutate(g = ifelse(MAF>=0.01,"Common","Rare")) %>% as.data.frame(),chr="CHR",pos="BP",p="p_value",
             split_by = "g",split_at = "Common",
            #ylim = c(0, 100), 
            #cex = 0.6, cex.axis = 0.9,
            upper_ylab = "Common",
            lower_ylab = "Rare",
            chr_colors = c("blue4", "orange3"))
dev.off()
}



library(qqman)
par(mfrow=c(2,1))
par(mar=c(0,5,3,3))
manhattan(gwasResults,ylim=c(0,10),cex=2.2,cex.lab=2.5,font.lab=2,font.axis=2,cex.axis=1.6,las=2,font=4)
par(mar=c(5,5,3,3))
manhattan(gwasResults,ylim=c(10,0),cex=2.2,cex.lab=2.5,font.lab=2,font.axis=2,cex.axis=1.6,las=2,font=4,xlab="",xaxt="n")
dev.off()