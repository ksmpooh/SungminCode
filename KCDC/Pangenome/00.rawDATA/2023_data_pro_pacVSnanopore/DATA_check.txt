### king and concordance

nanopore
/RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/*/SNP_INDEL/*.vcf

#106
outoput: /BDATA/smkim/pangenome/00.rawDATA/nanopore/vcftoplink

/BDATA/smkim/TOOLs/plink

## nanopore
/BDATA/smkim/pangenome/00.rawDATA/nanopore/vcf
plink --vcf nanopore_rmINFO.merge.vcf.gz --make-bed --out nanopore.rmINFO.merge.covert --vcf-half-call r

awk '{print $2}' nanopore.rmINFO.merge.covert.bim | sort | uniq -c | awk '$1==1{print $2}' > rsID.onlyone.txt
plink --bfile nanopore.rmINFO.merge.covert --extract rsID.onlyone.txt --make-bed --out nanopore.rmINFO.merge.covert.rsonlyone
awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' nanopore.rmINFO.merge.covert.rsonlyone.bim > id.change
plink --bfile nanopore.rmINFO.merge.covert.rsonlyone --update-name id.change --make-bed --out nanopore.rmINFO.merge.covert.rsonlyone.updatename



## nanopore
ls /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/*/SNP_INDEL/*.vcf | cut -d"/" -f 7 | xargs -I {} -P 20 bash -c "/BDATA/smkim/TOOLs/plink --vcf /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/{}/SNP_INDEL/{}_SNP_INDEL.vcf --vcf-half-call missing --make-bed --out {}.vcftoplink"
ls /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/*/SNP_INDEL/*.vcf | cut -d"/" -f 7 | xargs -I {} -P 20 bash -c "bgzip -c /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/{}/SNP_INDEL/{}_SNP_INDEL.vcf > {}.vcf.gz" 
## nanopore v2
/RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/NIH23O8372486/Basic_Analysis/SNP_INDEL/NIH23O8372486_SNP_INDEL.vcf

ls /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/*/Basic_Analysis/SNP_INDEL/*_SNP_INDEL.vcf | cut -d"/" -f 6 |  xargs -I {} -P 20 bash -c "bcftools annotate -x ^INFO/AC /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/{}/Basic_Analysis/SNP_INDEL/{}_SNP_INDEL.vcf -Oz -o {}.rmINFO.vcf.gz"

plink --vcf nanopore.v2.rmINFO.merge.vcf.gz --make-bed --out nanopore.v2.rmINFO.merge.covert --vcf-half-call m
awk '{print $2}' nanopore.v2.rmINFO.merge.covert.bim | sort | uniq -c | awk '$1==1{print $2}' > rsID.onlyone.txt
plink --bfile nanopore.v2.rmINFO.merge.covert --extract rsID.onlyone.txt --make-bed --out nanopore.v2.rmINFO.merge.covert.rsonlyone
awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' nanopore.v2.rmINFO.merge.covert.rsonlyone.bim > id.change
plink --bfile nanopore.v2.rmINFO.merge.covert.rsonlyone --update-name id.change --make-bed --out nanopore.v2.rmINFO.merge.covert.rsonlyone.updatename
## pacbio refpanel
ls /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.Revio/*/Data/Basic_Analysis/SNP_INDEL/*_SNP_INDEL.vcf | cut -d"/" -f 6 | xargs -I {} -P 20 bash -c "bcftools annotate -x ^INFO/AC /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.Revio/{}/Data/Basic_Analysis/SNP_INDEL/{}_SNP_INDEL.vcf -Oz -o {}.rmINFO.vcf.gz"
plink --vcf Revio.refpanel.vcf.gz --make-bed --out Revio.refpanel.covert
grep rs Revio.refpanel.covert.bim |awk '{print $2}' >rs.id.txt
plink --bfile Revio.refpanel.covert --extract rs.id.txt --make-bed --out Revio.refpanel.covert.rsID
awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' Revio.refpanel.covert.rsID.bim > id.change
plink --bfile Revio.refpanel.covert.rsID --update-name id.change --make-bed --out Revio.refpanel.covert.rsID.updatename

awk '{print $1}' id.change | sort |uniq -c | awk '$1 !=1{print $2}' > remove.id
plink --bfile Revio.refpanel.covert.rsID --exclude remove.id --make-bed --out Revio.refpanel.covert.rsID.rmdup

awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' Revio.refpanel.covert.rsID.rmdup.bim > id.change
plink --bfile Revio.refpanel.covert.rsID.rmdup --update-name id.change --make-bed --out Revio.refpanel.covert.rsID.rmdup.updatename




###
awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.bim > id.change
plink --bfile nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup --update-name id.change --make-bed --out nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename


cat nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename.bim /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink.bim | awk '{print $2,$5,$6}' | sort |uniq -c |awk '$1==2{print $2}' > intersect.txt


plink --bfile nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename --extract intersect.txt --make-bed --out nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename.intersect
plink --bfile /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink --extract intersect.txt --make-bed --out /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus2023.D.joint.Revio.sample.rmmultiallelic.convertplink.intersect

plink --bfile nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename.intersect --bmerge /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus2023.D.joint.Revio.sample.rmmultiallelic.convertplink.intersect --make-bed --out merge.v2





ls *gz |xargs -I{} -P 22 bash -c "tabix -f -p vcf {}"


plink --bfile merge.v2 --geno 0.1 --hwe 1e-6 --chr 1-22 --indep-pairwise 50 5 0.01 --out prun
plink --bfile merge.v2 --geno 0.05 --hwe 1e-3 --chr 1-22 --out prun

plink --bfile merge.v2 --extract prun.prune.in --make-bed --out merge.v2.prun
plink --bfile merge.v2 --geno 0.2 --hwe 1e-6 --chr 1-22 --make-bed --out merge.v2.prun
/BDATA/smkim/TOOLs/king -b merge.v2.prun.bed --related --prefix merge.v2.prun.king
/BDATA/smkim/TOOLs/king -b merge.v2.bed --related --prefix merge.v2.king --degree 2
king -b merge.v2.kchipID.bed --related --prefix  merge.v2.kchipID.king --degree 2


## nanopore v2 vs nanopore 1 vs revio (ref) vs revio(kchip)
/BDATA/smkim/pangenome/00.rawDATA/king/v2/

/BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename.bim
/BDATA/smkim/pangenome/00.rawDATA/nanopore/v2/nanopore.v2.rmINFO.merge.covert.rsonlyone.updatename.bim
/RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink.bim

cat /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename.bim /BDATA/smkim/pangenome/00.rawDATA/nanopore/v2/nanopore.v2.rmINFO.merge.covert.rsonlyone.updatename.bim /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink.bim | awk '{print $2}' | sort |uniq -c | awk '$1==3{print $2}' > intersect.txt

plink --bfile /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename --extract intersect.txt --make-bed --out Revio.refpanel.18.inter
plink --bfile /BDATA/smkim/pangenome/00.rawDATA/nanopore/v2/nanopore.v2.rmINFO.merge.covert.rsonlyone.updatename --extract intersect.txt --make-bed --out nanopore.v2.17.inter
plink --bfile /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink --extract intersect.txt --make-bed --out Revio.kchip.48.inter

ls Revio.*bed > merge.list
plink --bfile nanopore.v2.17.inter --merge-list merge.list --make-bed --out merge

plink --bfile Revio.refpanel.18.inter --exclude merge-merge.missnp --make-bed --out Revio.refpanel.18.inter.rmdup
plink --bfile nanopore.v2.17.inter --exclude merge-merge.missnp --make-bed --out nanopore.v2.17.inter.rmdup
plink --bfile Revio.kchip.48.inter --exclude merge-merge.missnp --make-bed --out Revio.kchip.48.inter.rmdup


ls Revio.*rmdup*bed > merge.list
plink --bfile nanopore.v2.17.inter.rmdup --merge-list merge.list --make-bed --out merge
king -b merge.bed --related --cpus 60 --prefix merge.king


### 8K ref
## awk '{split($10,a,":"); print $4,a[2],"chr"a[1]"_"a[2]"_"a[3]"_"a[4]}' KBAv1.1_checkREF_WGS8KAF_gnomADAF_filter_HG38.txt > kchip.hg19.hg38pos.hg38ID
awk '{print $1}' /RDATA8/LaCie2/smkim/GWAS/hg19.id | sort |uniq -c |awk '$1==1{print $2}' > hg19.id.uniq

cd /ADATA/smkim/KBA_130K/12.panel/sm

plink --bfile chr1.8k.plink --extract hg19.id.uniq --make-bed --out chr1.8k.plink.hg19.id
cp chr1.8k.plink.hg19.id.bim chr1.8k.plink.hg19.id.bim.ori

#### R
library(dplyr)
df <-read.table("chr1.8k.plink.hg19.id.bim.ori")
ref <- read.table("/RDATA8/LaCie2/smkim/GWAS/kchip.hg19.hg38pos.hg38ID")
colnames(ref) <-c("V2","pos","newID")
df %>% left_join(ref) -> out


out %>% filter(grepl("chr---",newID)) -> remove.list
write.table(remove.list,"remove.list",col.names=F,row.names=F,quote=F,sep="\t")
out %>% filter(!grepl("chr---",newID)) -> out
write.table(out[,c(1,8,3,7,5,6)],"chr1.8k.plink.hg19.id.rmlist.bim_liftover",col.names=F,row.names=F,quote=F,sep="\t")
##
awk '{print $2}' remove.list > remove.snp.list
cp chr1.8k.plink.hg19.id.bim.ori chr1.8k.plink.hg19.id.bim
plink --bfile chr1.8k.plink.hg19.id --exclude remove.snp.list  --make-bed --out chr1.8k.plink.hg19.id.rmlist
cp chr1.8k.plink.hg19.id.rmlist.bim chr1.8k.plink.hg19.id.rmlist.bim_ori
cp chr1.8k.plink.hg19.id.rmlist.bim_liftover chr1.8k.plink.hg19.id.rmlist.bim





## 8K ref vs merge
/BDATA/smkim/pangenome/00.rawDATA/king/v2
cat merge.bim /ADATA/smkim/KBA_130K/12.panel/sm/chr1.8k.plink.hg19.id.rmlist.bim| awk '{print $2}' | sort |uniq -c | awk '$1==2{print $2}' > 8k.inter
plink --bfile merge --extract 8k.inter --make-bed --out merge_8kinter
plink --bfile /ADATA/smkim/KBA_130K/12.panel/sm/chr1.8k.plink.hg19.id.rmlist --extract 8k.inter --make-bed --out 8k_mergeinter
plink --bfile merge_8kinter --bmerge 8k_mergeinter --make-bed --out merge_all.8k
plink --bfile merge_8kinter --exclude merge_all.8k-merge.missnp --make-bed --out merge_8kinter_rmdup
plink --bfile 8k_mergeinter --exclude merge_all.8k-merge.missnp --make-bed --out 8k_mergeinter_rmdup
plink --bfile merge_8kinter_rmdup --bmerge 8k_mergeinter_rmdup --make-bed --out merge_rmdup_all.8k

king -b merge_rmdup_all.8k.bed --related --prefix merge_rmdup_all.8k_king --cpus 60

## kchip
cd /BDATA/smkim/ref/00.ori
plink --bfile KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF --exclude /RDATA8/LaCie2/smkim/GWAS/nohg38.AXID.txt --make-bed --out KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38
cp KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38.bim KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38.bim_ori


## R


library(dplyr)
df <- read.table("KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38.bim_ori")
ref <-read.table("/RDATA8/LaCie2/smkim/GWAS/hg38pos_probeID.txt")
colnames(ref)[1]<-"hg38"
df %>% left_join(ref) -> out


write.table(out[,c(1,2,3,7,5,6)],"KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38.bim",col.names=F,row.names=F,quote=F,sep="\t")

##
awk '{print $2"\tchr"$1"_"$4"_"$6"_"$5}' KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38.bim > id.change
plink --bfile KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38 --update-name id.change --make-bed --out KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename


## kchip vs nanopore v1
cd /BDATA/smkim/pangenome/00.rawDATA/king/v3
cat /BDATA/smkim/pangenome/00.rawDATA/king/nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename.bim /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename.bim | awk '{print $2}' | sort |uniq -c | awk '$1==2{print $2}' > intersect.txt
plink --bfile /BDATA/smkim/pangenome/00.rawDATA/king/nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename --extract intersect.txt --make-bed --out nanopore.v1.inter
plink --bfile /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename --extract intersect.txt --make-bed --out kchip130K.v1.inter
plink --bfile nanopore.v1.inter --bmerge kchip130K.v1.inter --make-bed --out merge
king -b merge.bed --related --cpus 60 --prefix merge.king


## kchip vs revio repanel
cd /BDATA/smkim/pangenome/00.rawDATA/king/v4
cat /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename.bim /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename.bim | awk '{print $2}' | sort |uniq -c | awk '$1==2{print $2}' > intersect.txt

plink --bfile /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename --extract intersect.txt --make-bed --out Revio.refpanel.inter
plink --bfile /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename --extract intersect.txt --make-bed --out kchip130K.v1.inter
plink --bfile Revio.refpanel.inter --bmerge kchip130K.v1.inter --make-bed --out merge

king -b merge.bed --related --cpus 60 --prefix merge.king


## v5
cd /BDATA/smkim/pangenome/00.rawDATA/king/v5

/BDATA/smkim/pangenome/00.rawDATA/king/v2/merge

cat /BDATA/smkim/pangenome/00.rawDATA/king/nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename.bim /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename.bim /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename.bim | awk '{print $2}' | sort |uniq -c | awk '$1==3{print $2}' > intersect.txt

plink --bfile /BDATA/smkim/pangenome/00.rawDATA/king/nanopore_rmINFO.merge.covertplink.rsid.rmmissnp.rmdup.updatename --extract intersect.txt --make-bed --out nanopore.v1.inter
plink --bfile /BDATA/smkim/pangenome/00.rawDATA/Revio/refpanel/Revio.refpanel.covert.rsID.rmdup.updatename --extract intersect.txt --make-bed --out Revio.refpanel.inter
plink --bfile /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename --extract intersect.txt --make-bed --out kchip130K.v1.inter

plink --bfile kchip130K.v1.inter --merge-list merge-list.txt --make-bed --out merge

king -b merge.bed --related --cpus 60 --prefix merge.king

## v6
cd /BDATA/smkim/pangenome/00.rawDATA/king/v6

cat /BDATA/smkim/pangenome/00.rawDATA/nanopore/vcf/nanopore.rmINFO.merge.covert.rsonlyone.updatename.bim /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink.bim /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename.bim | awk '{print $2}' | sort |uniq -c | awk '$1==3{print $2}' > intersect.txt

plink --bfile /BDATA/smkim/pangenome/00.rawDATA/nanopore/vcf/nanopore.rmINFO.merge.covert.rsonlyone.updatename --extract intersect.txt --make-bed --out nanopore.v1.inter
plink --bfile /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio/glnexus/2023.D.joint.Revio.sample.rmmultiallelic.convertplink --extract intersect.txt --make-bed --out Revio.kchip.inter
plink --bfile /BDATA/smkim/ref/00.ori/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename --extract intersect.txt --make-bed --out kchip130K.v1.inter

plink --bfile kchip130K.v1.inter --merge-list merge-list.txt --make-bed --out merge


king -b merge.bed --related --cpus 60 --prefix merge.king



### check 
cd /BDATA/smkim/pangenome/00.rawDATA/king/

## R
library(dplyr)
nano.ref <- read.table("v3/merge.king.kin0",header=T) %>% filter(InfType == "Dup/MZ")
revio.ref <- read.table("v4/merge.king.kin0",header=T) %>% filter(InfType == "Dup/MZ")
revio.kchip <- read.table("v6/merge.king.kin0",header=T) %>% filter(InfType == "Dup/MZ")

dim(nano.ref)
dim(revio.ref)
dim(revio.kchip)

revio.kchip %>% select(ID1,ID2) -> revio.kchip
colnames(revio.kchip) <- c("ID1","revio.kchip.ID2")
nano.ref %>% select(ID1,ID2) -> nano.ref
colnames(nano.kchip) <- c("ID1","nano.ref.ID2")

revio.kchip %>% left_join(nano.ref) -> out
colnames(out) <- c("KCHIP","revio.48.kchip","nanopore.17.ref")
write.table(out,"KCHIP.revio.nanopore.matchingID.txt",col.names=T,row.names=F,quote=F,sep="\t")


##

cd /BDATA/smkim/pangenome/00.rawDATA/king/v6
plink --bfile kchip130K.v1.inter --bmerge nanopore.v1.inter --make-bed --out kchip_nanopore
plink --bfile kchip130K.v1.inter --bmerge Revio.kchip.inter --make-bed --out kchip_revio
plink --bfile nanopore.v1.inter --bmerge Revio.kchip.inter --make-bed --out nanopore_revio


king -b nanopore_revio.bed --related --cpus 60 --prefix nanopore_revio.king
king -b kchip_revio.bed --related --cpus 60 --prefix kchip_revio.king
king -b kchip_nanopore.bed --related --cpus 60 --prefix kchip_nanopore.king


## 
> nano <- read.table("v3/intersect.txt")
> head(nano)
                   V1
1 chr10_100006605_T_C
2 chr10_100032684_A_C
3 chr10_100045685_C_T
4 chr10_100057584_A_G
5 chr10_100069757_C_T
6 chr10_100090627_C_A
> revi <- read.table("v4/intersect.txt")
> head(nano)
                   V1
1 chr10_100006605_T_C
2 chr10_100032684_A_C
3 chr10_100045685_C_T
4 chr10_100057584_A_G
5 chr10_100069757_C_T
6 chr10_100090627_C_A
> head(revi)
                   V1
1 chr10_100006605_T_C
2 chr10_100013932_C_G
3  chr10_10002016_C_A
4 chr10_100021244_G_A
5 chr10_100057584_A_G
6 chr10_100063786_T_C
> table(nano$V1 %in% revi$V2)

 FALSE
277913
> table(nano$V1 %in% revi$V1)

 FALSE   TRUE
 68705 209208
> table(revi$V1 %in% nano$V1)

 FALSE   TRUE
 72604 209208


469451 KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename.bim


##데이터 체크 : 원본
참조_nanopore 17건: /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/
학술_pacbio 48건: /RDATA6/Pangenome/00.rawDATA/2023.pro.KCHIP.Revio

## 기본 적인 QC (king 분석에 사용한 데이터)
/BDATA/smkim/pangenome/00.rawDATA/king_check/00.rawDATA/

시퀀싱데이터 merge 작업: VCF merge -> multi-allele 제거 -> plink 포맷 변경 -> 비교 가능 SNP 추출, ID 형식 변경
한국인칩 130K 데이터: hg38로 liftover, ID 형식 변경

## KBA130K vs 참조_nanopore 17건이랑 비교 -> 결과: 17건, MZ list가 나옴
/BDATA/smkim/pangenome/00.rawDATA/king_check/KBA130K_nanopore17/
/BDATA/smkim/pangenome/00.rawDATA/king_check/KBA130K_nanopore17/merge.king.kin0 #king 결과
/BDATA/smkim/pangenome/00.rawDATA/king_check/inter_SNP/KBA130K_nanopore17_inter.txt # 공통 SNP


## KBA130K vs 참조_nanopore 17건 vs 학술_pacbio 48건, 3개 공통 SNP 뽑고 비교 -> 학술_pacbio 48건만 MZ list 나옴
/BDATA/smkim/pangenome/00.rawDATA/king_check/KBA130K_Revio48_nanopore17/
/BDATA/smkim/pangenome/00.rawDATA/king_check/KBA130K_Revio48_nanopore17/merge.king.kin0 #king 결과
/BDATA/smkim/pangenome/00.rawDATA/king_check/inter_SNP/KBA130K_Revio48_nanopore17_inter.txt #공통 SNP


## matching Table: 위 결과를 기반으로 매칭 테이블 만듬
/BDATA/smkim/pangenome/00.rawDATA/KCHIP.revio.nanopore.matchingID.txt



## sample ID change
/BDATA/smkim/pangenome/00.rawDATA/nanoToKBA.txt

#ls *rmINFO.vcf.gz | sed 's/.rmINFO.vcf.gz//g' |xargs -I{} -P 22 bash -c "bcftools reheader -s /BDATA/smkim/pangenome/00.rawDATA/nanoToKBA.txt {}.rmINFO.vcf.gz | bgzip -c > Nanopore.{}.rmINFO.vcf.gz"
#cat ../../KCHIP.revio.nanopore.matchingID.17sample.txt | awk '{print "bcftools reheader -s /BDATA/smkim/pangenome/00.rawDATA/nanoToKBA.txt "$3".rmINFO.vcf.gz | bgzip -c > Nanopore."$1".rmINFO.vcf.gz"}'

cat ../../KCHIP.revio.nanopore.matchingID.17sample.txt | awk '{print "zcat "$3".rmINFO.vcf.gz |sed \"s/"$3"/"$1"/g\" | bgzip -c > Nanopore."$1".rmINFO.vcf.gz"}'
ls Nanopore.NIH14*gz | cut -d"." -f 2 | xargs -I {} -P 20 bash -c "bcftools annotate -x ^INFO/AC --set-id '%CHROM\_%POS\_%REF\_%ALT' Nanopore.{}.rmINFO.vcf.gz -Oz -o Nanopore.{}.rmINFO.v2.vcf.gz"
ls *rmINFO.v2.vcf.gz | xargs -I{} -P 22 bash -c "tabix -f -p vcf {}"
ls *rmINFO.v2.vcf.gz | sed 's/.vcf.gz//g' | xargs -I{} -P 22 bash -c "bcftools filter -r chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22 {}.vcf.gz | bgzip -c > {}.autosomal.vcf.gz"


/BDATA/smkim/pangenome/00.rawDATA/revio.kchipToKBA.txt
/BDATA/smkim/pangenome/00.rawDATA/Revio/kchip
#cat ../../KCHIP.revio.nanopore.matchingID.17sample.txt | awk '{print "bcftools reheader -s /BDATA/smkim/pangenome/00.rawDATA/revio.kchipToKBA.txt "$2".GRCh38.deepvariant.vcf.gz | bgzip -c > Revio_kchip."$1".GRCh38.deepvariant.vcf.gz"}'

cat ../../KCHIP.revio.nanopore.matchingID.17sample.txt | awk '{print "zcat "$2".GRCh38.deepvariant.vcf.gz |sed \"s/"$2"/"$1"/g\" | bgzip -c > Revio_kchip."$1".GRCh38.deepvariant.vcf.gz"}'
cat reheader.txt | xargs -I{} -P 22 bash -c "{}"

bcftools view -f PASS {} | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' -Oz -o 
ls Revio_kchip.NIH*gz | sed 's/.vcf.gz//g' | xargs -I{} -P 22 bash -c "bcftools view -f PASS {}.vcf.gz | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' -Oz -o {}.PASS_setID.vcf.gz"
ls *PASS_setID.vcf.gz | sed 's/.vcf.gz//g' | xargs -I{} -P 22 bash -c "bcftools filter -r chr1,chr2,chr3,chr4,chr5,chr6,chr7,chr8,chr9,chr10,chr11,chr12,chr13,chr14,chr15,chr16,chr17,chr18,chr19,chr20,chr21,chr22 {}.vcf.gz | bgzip -c > {}.autosomal.vcf.gz"
/BDATA/smkim/pangenome/00.rawDATA/region.auto.txt


## KCHIP QC
cd /BDATA/smkim/pangenome/00.rawDATA/kchip
plink --bfile KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample --recode vcf --out KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert --a2-allele ref.allele
bcftools annotate --rename-chrs rechr KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader.vcf.gz -Oz -o KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz


# VCF stats
/BDATA/smkim/pangenome/01.vcf.stat


#/RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/*/SNP_INDEL/*.vcf
#ls /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/*/SNP_INDEL/*.vcf | cut -d"/" -f 7 | xargs -I {} -P 20 bash -c "bcftools stats /RDATA6/Pangenome/00.rawDATA/2023.pro.ref_panel.nanopore/total/{}/SNP_INDEL/{}_SNP_INDEL.vcf > {}.stats"
#/BDATA/smkim/pangenome/01.vcf.stat/revio.kchip
#ls *deepvariant.vcf.gz | xargs -I {} -P 20 bash -c "bcftools stats {} > /BDATA/smkim/pangenome/01.vcf.stat/revio.kchip/{}.stats"

## new
/BDATA/smkim/pangenome/00.rawDATA/nanopore/vcf/
ls *.rmINFO.v2.vcf.gz | xargs -I {} -P 20 bash -c "bcftools stats {} > /BDATA/smkim/pangenome/01.vcf.stat/{}.stats"
ls *PASS_setID*gz | xargs -I {} -P 20 bash -c "bcftools stats {} > /BDATA/smkim/pangenome/01.vcf.stat/{}.stats"

ls *auto*.vcf.gz| xargs -I {} -P 20 bash -c "bcftools stats {} > /BDATA/smkim/pangenome/01.vcf.stat/{}.stats"
ls *auto*.vcf.gz| xargs -I {} -P 20 bash -c "bcftools stats {} > /BDATA/smkim/pangenome/01.vcf.stat/{}.stats"


# VCF AF stats
cd /BDATA/smkim/pangenome/00.rawDATA/
bcftools +fill-tags in.bcf -Ob -o out.bcf -- -t AF,AC,AN,F_MISSING,NS,HWE

bcftools norm -m -any Nanopore_repanel.merge.rmINFO_autosomal.vcf.gz |bcftools view -v snps | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' | bcftools +fill-tags -Oz -o Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.vcf.gz -- -t AF,AC,AN,F_MISSING,NS,HWE
bcftools norm -m -any Revio_kchip.merge.deep_PASS_autosomal.vcf.gz |bcftools view -v snps | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT'| bcftools +fill-tags -Oz -o Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.vcf.gz -- -t AF,AC,AN,F_MISSING,NS,HWE

bcftools norm -m -any Nanopore_repanel.merge.rmINFO_autosomal.vcf.gz |bcftools view -v indels | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' |  bcftools +fill-tags -Oz -o Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlyindel.vcf.gz -- -t AF,AC,AN,F_MISSING,NS,HWE
bcftools norm -m -any Revio_kchip.merge.deep_PASS_autosomal.vcf.gz |bcftools view -v indels | bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT'| bcftools +fill-tags -Oz -o Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlyindel.vcf.gz -- -t AF,AC,AN,F_MISSING,NS,HWE

ls *.only*gz | xargs -I{} -P 2 bash -c "bcftools query -f '%ID\t%F_MISSING\t%NS\t%AN\t%AF\t%AC\t[%DP\t]\n' {} > {}.AF_stat.txt"


bcf

/BDATA/smkim/pangenome/01.vcf.stat/AF




## concordacne
bcftools merge *auto*.vcf.gz |bgzip -c > ../../Nanopore_repanel.merge.rmINFO_autosomal.vcf.gz
bcftools merge *auto*.vcf.gz | bgzip -c > ../../Revio_kchip.merge.deep_PASS_autosomal.vcf.gz


bcftools view --max-alleles 2 --exclude-types indels input.vcf.gz

ls *autosomal.vcf.gz | sed 's/.vcf.gz//g' | xargs -I {} -P 20 bash -c "bcftools view --max-alleles 2 --types snps {}.vcf.gz | bgzip -c > /BDATA/smkim/pangenome/02.concordance/{}.onlySNP.vcf.gz"

bcftools isec -p inter Revio_kchip.merge.deep_PASS_autosomal.onlySNP.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.onlySNP.vcf.gz

SnpSift concordance ../00.rawDATA/Revio/kchip/Revio_kchip.NIH14D3747033.GRCh38.deepvariant.PASS_setID.vcf.gz ../00.rawDATA/nanopore/vcf/Nanopore.NIH14D3747033.rmINFO.v2.vcf.gz > test.txt

SnpSift concordance 0002.vcf 0003.vcf > test.txt


## kchip vs nanopore vs revio 
cd /BDATA/smkim/pangenome/02.concordance
/BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz



bcftools isec -p inter_3all /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz ../00.rawDATA/Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.vcf.gz ../00.rawDATA/Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.vcf.gz

## concordacne new
cd /BDATA/smkim/pangenome/00.rawDATA

ls *onlySNP*gz | sed 's/.vcf.gz//g' |xargs -I{} -P 2 bash -c "bcftools view -i 'F_MISSING <= 0.20  & HWE >= 1e-6' {}.vcf.gz -Oz -o ../02.concordance/{}.snpqc.vcf.gz"
ls *onlySNP*gz | sed 's/.vcf.gz//g' |xargs -I{} -P 2 bash -c "bcftools view -i 'F_MISSING <= 0.30  & HWE >= 1e-6' {}.vcf.gz -Oz -o ../02.concordance/{}.03snpqc.vcf.gz"
ls *onlySNP*gz | sed 's/.vcf.gz//g' |xargs -I{} -P 2 bash -c "bcftools view -i 'F_MISSING <= 0.50  & HWE >= 1e-6' {}.vcf.gz -Oz -o ../02.concordance/{}.05snpqc.vcf.gz"

cd /BDATA/smkim/pangenome/02.concordance

bcftools isec --nfiles 3 -p before_inter3all /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz ../00.rawDATA/Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.vcf.gz ../00.rawDATA/Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.vcf.gz



ls *snpqc.vcf.gz | xargs -I{} -P 2 bash -c "tabix -f -p vcf {}"
ls *snpqc.vcf.gz | xargs -I{} -P 6 bash -c "tabix -f -p vcf {}"
bcftools isec --nfiles 3 -p new_inter3all /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.snpqc.vcf.gz
bcftools isec -p new_inter Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.snpqc.vcf.gz


bcftools isec --nfiles 3 -p new_inter3all_03 /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.03snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.03snpqc.vcf.gz
bcftools isec -p new_inter_03 Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.03snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.03snpqc.vcf.gz

bcftools isec --nfiles 3 -p new_inter3all_05 /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.05snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.05snpqc.vcf.gz
bcftools isec -p new_inter_05 Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.05snpqc.vcf.gz Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.05snpqc.vcf.gz


#######

SnpSift concordance 0000.vcf 0001.vcf > 01.txt
SnpSift concordance 0000.vcf 0002.vcf > 02.txt
SnpSift concordance 0001.vcf 0002.vcf > 12.txt

SnpSift concordance 0002.vcf 0003.vcf > 23.txt



bcftools query -f "%ID\n" /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz > kchip
bcftools query -f "%ID\n" Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.snpqc.vcf.gz > revio
bcftools query -f "%ID\n" Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.snpqc.vcf.gz > nanopore
cat kchip revio nanopore | sort |uniq -c | awk '$1==3{print $0}' |wc -l

bcftools query -f "%ID\n" /BDATA/smkim/pangenome/00.rawDATA/kchip/KCHIP130K_MERGED_QCed_addINDEL_rmSNP_rmMAF_rmno38_updatename_17sample_convert_reheader_rechr.vcf.gz > kchip
bcftools query -f "%ID\n" ../00.rawDATA/Revio_kchip.merge.deep_PASS_autosomal.norm_setID.onlySNP.vcf.gz > revio.before
bcftools query -f "%ID\n" ../00.rawDATA/Nanopore_repanel.merge.rmINFO_autosomal.norm_setID.onlySNP.vcf.gz > nanopore.before

cat kchip revio.before nanopore.before | sort |uniq -c | awk '$1==3{print $0}' |wc -l
