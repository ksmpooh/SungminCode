~/bwa-mem2/bwa-mem2 mem -t 4 ./HLA.target.fasta ../733_S56_L002_R2_001.fastq.gz ../733_S56_L002_R1_001.fastq.gz >test_align.sam



#samtools view test.sam > test.bam

samtools sort test.bam
samtools index test.bam

sambamba view test.sam -o test.bam
sambamba sort test.bam




sudo docker run -v "/DATA/smkim/pacbio/INPUTs/Data":"/input" -v "/DATA/smkim/pacbio/OUTPUTs/GATK":"/output" -it broadinstitute/gatk \
bash -c 'gatk HaplotypeCaller \
-I /input/2020HLAseq001.movies.Q20.bam \
-R /output/HLA.target.fasta \
-O /output/test1.g.vcf.gz \
-ERC GVCF'


sudo docker run -v "/DATA/smkim/pacbio/INPUTs/Data":"/input" -v "/DATA/smkim/pacbio/OUTPUTs/GATK":"/output" -it broadinstitute/gatk \
bash -c 'gatk HaplotypeCaller \
-I /input/2020HLAseq001.movies.Q20.bam \
-R /output/HLA.target.fasta \
-O /output/test1.g.vcf.gz \
-ERC GVCF'



sudo docker run -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test":"/input" -it broadinstitute/gatk \
bash -c 'gatk HaplotypeCaller \
-I /input/test_align_sorted.bam \
-R /input/HLA.target.fasta \
-O /input/test_align_sorted.gatk.gvcf.gz \
-ERC GVCF' \
--sample-name 733'

#-DGATK_STACKTRACE_ON_USER_EXCEPTION true \
#--native-pair-hmm-threads


#####
cd /DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test


# Indexing the reference sequence (Requires 28N GB memory where N is the size of the reference sequence).
./bwa-mem2 index [-p prefix] <in.fasta>

./bwa-mem2 index [-p prefix] <in.fasta>
Where 
<in.fasta> is the path to reference sequence fasta file and 
<prefix> is the prefix of the names of the files that store the resultant index. Default is in.fasta.

# Mapping 
# Run "./bwa-mem2 mem" to get all options
./bwa-mem2 mem -t <num_threads> <prefix> <reads.fq/fa> > out.sam
Where <prefix> is the prefix specified when creating the index or the path to the reference fasta file in case no prefix was provided.

https://solution4u.tistory.com/10
bwa mem -M -R "@RG\tID:HWI\tSM:[샘플이름]\tPL:ILLUMINA\tLB:[기계]" -t 10 [참조유전체 fasta] [FASTQ.gz 1; 압축형태 이용가능] [FASTQ.gz 2]

~/bwa-mem2/bwa-mem2 mem -t 16 -R "@RG\tID:HWI\tSM:733\tPL:ILLUMINA\tLB:Novaseq7000" ./HLA.target.fasta ../733_S56_L002_R2_001.fastq.gz ../733_S56_L002_R1_001.fastq.gz >test_align.sam
samtools sort test_align.sam -o test_align_sorted.bam


##test
sudo docker run -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test/":"/input" -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test":"/output" -v "/DATA/smkim/pacbio/INPUTs":"/ref" google/deepvariant \
/opt/deepvariant/bin/run_deepvariant --model_type WGS --ref /ref/HLA.target.fasta \
--reads /input/test_align_sorted.bam --output_gvcf /output/test_align_sorted_deepvariant.gvcf.gz \
--output_vcf /output/test_align_sorted_deepvariant.vcf.gz --num_shards 20



###
#samtools sort test_align.sam -o test_align_sorted.bam

~/bwa-mem2/bwa-mem2 mem -t 4 ./HLA.target.fasta ../733_S56_L002_R2_001.fastq.gz ../733_S56_L002_R1_001.fastq.gz | samtools sort -o test999.sorted.bam
###mapping
ls *R1*gz | cut -d"_" -f1-3 | xargs -I{} -P 8 bash -c "~/bwa-mem2/bwa-mem2 mem -t 4 ./test/HLA.target.fasta {}_R1_001.fastq.gz {}_R2_001.fastq.gz > ./01.mapping/{}_align.sam"


index
ls *bam | xargs -I{} -P 32 bash -c "samtools index {}"




### mark deduplication
sudo docker run -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test/":"/input" -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test":"/output" -v "/DATA/smkim/pacbio/INPUTs":"/ref" broadinstitute/picard \
java -jar /usr/picard/picard.jar MarkDuplicates \
I=/input/test_align_sorted.bam \
O=/input/test_align_sorted_dedup.bam \
METRICS_FILE=duplicates \
REMOVE_DUPLICATES=True \
CREATE_INDEX=True

### recalibrastion -> 수행 안함

gatk-4.1.6.0/gatk BaseRecalibrator -R ref/human_g1k_v37_decoy.fasta -I dedup.SNUM0377-01.bam --known-sites ref/dbsnp_138.b37.vcf \
--known-sites ref/1000G_phase1.snps.high_confidence.b37.vcf --known-sites ref/Mills_and_1000G_gold_standard.indels.b37.vcf \
 -L ref/hs37d5_MedExome_and_coding_padded_Nov2015.bed -O SNUM0377-01.recal.table


/DATA/smkim/HLA_seq/REF/
sudo docker run -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test":"/input" -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/Fastq/test":"/output" -v "/DATA/smkim/HLA_seq/REF/":"/ref" -it broadinstitute/gatk \
bash -c 'gatk BaseRecalibrator \
-I /input/test_align_sorted_dedup.bam \
-R /ref/HLA.target.fasta \
-O /input/test_align_sorted_dedup_recal.table \
--known-sites /ref/gatk_resources/dbsnp_138.hg19.vcf.bgz \
--known-sites /ref/gatk_resources/1000G_phase1.snps.high_confidence.b37.vcf.bgz \
--known-sites /ref/gatk_resources/Mills_and_1000G_gold_standard.indels.b37.vcf.bgz'

A USER ERROR has occurred: Input files reference and features have incompatible contigs: No overlapping contigs found.
  reference contigs = [6:28477797-33448354]
  features contigs = [chrM, chr1, chr2, ch




sudo docker run -v "/DATA/smkim/HLA_seq/MHC_PacBio_Rawdata/03.variant.calling/test":"/input" \
-it broadinstitute/gatk bash -c 'gatk CountVariants -V /input/2nd_Cell.264.bc1001--bc1001_variant.calling.vcf.gz > /input/CountVariants.txt'

sudo docker run -v "/DATA/smkim/HLA_seq/MHC_PacBio_Rawdata/03.variant.calling/test":"/input" \
-it broadinstitute/gatk bash -c 'gatk CountVariants -V /input/2nd_Cell.264.bc1001--bc1001_variant.calling.gvcf.gz > /input/CountVariants_gvcf.txt'


## joint cllinag


glnexus



ls *gvcf.gz > gvcf.list.txt ### /input/

docker run --rm -i -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/02.variant.call/DV":"/input" ghcr.io/dnanexus-rnd/glnexus:v1.4.1 \
bash -c 'glnexus_cli \
--config DeepVariant \
--list /input/gvcf.list.txt' | bcftools view - | bgzip -c > /DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/03.joint.calling/HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.vcf.gz
#/input/HLA.Shortread.Seq.NIH19KT3813.align.sorted.dedup.Deepvariant_VariantCalling.gvcf.gz


docker run --rm -i -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/02.variant.call/DV":"/input" ghcr.io/dnanexus-rnd/glnexus:v1.4.1 \
bash -c 'glnexus_cli \
--config DeepVariant_unfiltered \
--list /input/gvcf.list.txt' | bcftools view - | bgzip -c > /DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/03.joint.calling/HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling_unfiltered.vcf.gz


DeepVariant_unfiltered


# gatk


ls *gvcf.gz > gvcf.list.txt 
### %s/HLA/\/input\/HLA/g


docker run -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/02.variant.call/GATK":"/input" -v "/DATA/smkim/HLA_seq/MHC_Illumina_Rawdata/03.joint.calling":"/output" -v "/DATA/smkim/HLA_seq/REF":"/ref" \
broadinstitute/gatk gatk CombineGVCFs -R /ref/HLA.target.fasta -V /input/gvcf.list.txt -O /output/HLA.Shortread.Seq.NIH19KT3814.align.sorted.dedup.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.gvcf.gz
HLA.Shortread.Seq.NIH19KT3814.align.sorted.dedup.GATK_haplotypeCaller_VariantCalling.gvcf.gz


docker run -v "/DATA/smkim/HLA_seq/long-read/02.mapping":"/input" -v "/DATA/smkim/HLA_seq/long-read/03.variant.calling":"/output" -v "/DATA/smkim/HLA_seq/REF":"/ref" \
broadinstitute/gatk gatk GenotypeGVCFs -R /ref/HLA.target.fasta -I /input/$1.bam -O /output/$1.GATK_haplotypeCaller_VariantCalling.gvcf.gz -ERC GVCF




 gatk CombineGVCFs \
   -R reference.fasta \
   -V sample1.g.vcf.gz \
   -V sample2.g.vcf.gz \
   -O cohort.g.vcf.gz



gatk --java-options "-Xmx4g" GenotypeGVCFs \
   -R Homo_sapiens_assembly38.fasta \
   -V input.g.vcf.gz \
   -O output.vcf.gz
 