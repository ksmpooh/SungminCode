## kchip
2019년도에 생산된 장기이식 샘플 중, QC out된 샘플 제거하고 HLA sequencing 60개가 포함된 샘플만 가지고 genotype calling 진행


cd /BDATA/smkim/JG.HLAimputation/kchip_forHLA.FIANL/02.plink

--chr 6 --from-bp 28477797 --to-bp 33448354 --geno 0.05 --hwe 1e-6 --make-bed --out JG.QCed.forHLAseq


## long-read ID change
cd /Users/ksmpooh/Desktop/KCDC/long_read/2022/VCF
cd /DATA/smkim/HLA_seq/Final.VCF  #101



#ls ./DV/HLA.Longread.*gz | sed "s/vcf.gz//g" | sed "s/.\/DV\///g" | xargs -I {} -P 2 bash -c "bcftools reheader -s ./ID.change.txt ./DV/{}vcf.gz -o ./Final.VCF/{}sampleIDCheck.vcf.gz"
#ls ./GATK/HLA.Longread.*gz | sed "s/vcf.gz//g" | sed "s/.\/GATK\///g" | xargs -I {} -P 2 bash -c "bcftools reheader -s ./ID.change.txt ./GATK/{}vcf.gz -o ./Final.VCF/{}sampleIDCheck.vcf.gz"


bcftools reheader -s ./ID.change.txt ./DV/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.vcf.gz -o ./Final.VCF/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.sampleIDcheck.vcf.gz
bcftools reheader -s ./ID.change.txt ./DV/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling_unfiltered.updateID.vcf.gz -o ./Final.VCF//HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling_unfiltered.updateID.sampleIDcheck.vcf.gz

bcftools reheader -s ID.change.txt ./GATK/HLA.Longread.Seq.GATK.recal.pass.vcf.gz -o ./Final.VCF/HLA.Longread.Seq.GATK.recal.pass.sampleIDcheck.vcf.gz
bcftools reheader -s ID.change.txt ./GATK/HLA.Longread.Seq.mapped.Q20.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.vcf.gz -o ./Final.VCF/HLA.Longread.Seq.mapped.Q20.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.sampleIDcheck.vcf.gz

ls *gz | xargs -I{} -P 4 bash -c 'tabix -f -p vcf {}'
ls *gz | xargs -I{} -P 32 bash -c 'tabix -f -p vcf {}'



### only SNP

ls *gz | sed "s/.vcf.gz//g" | xargs -I{} -P 1 bash -c "bcftools view --max-alleles 2 --exclude-types indels {}.vcf.gz -o ./onlySNP/{}.onlySNP.vcf.gz"
ls *gz | sed "s/.vcf.gz//g" | xargs -I{} -P 1 bash -c "bcftools view --max-alleles 2 --exclude-types indels {}.vcf.gz -o {}.onlySNP.vcf.gz"


HLA.Longread.Seq.GATK.recal.pass.sampleIDcheck.vcf.gz
HLA.Longread.Seq.mapped.Q20.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.sampleIDcheck.vcf.gz
HLA.Shortread.Seq.GATK.recal.pass.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.vcf.gz

HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.sampleIDCheck.vcf.gz
HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling_unfiltered.updateID.sampleIDcheck.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling_unfiltered.updateID.vcf.gz

#"bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' {}.vcf.gz | bgzip -c > ./{}_SNPIDupdate.vcf.gz"
##### GATK : onlysnp -> id change
import os,glob
dfs = glob.glob("*GATK*.gz")
for df in dfs:
    os.system("bcftools view --max-alleles 2 --exclude-types indels %s | bcftools annotate --set-id \'%%CHROM\\_%%POS\\_%%REF\\_%%ALT\' | bgzip -c > ./onlySNP/%s"%(df,df.replace(".vcf.gz",".onlySNP.SNPIDupdate.vcf.gz")))
    #print("bcftools view --max-alleles 2 --exclude-types indels %s | bcftools annotate --set-id \'%%CHROM\\_%%POS\\_%%REF\\_%%ALT\' | bgzip -c > ./onlySNP/%s"%(df,df.replace(".vcf.gz",".onlySNP.SNPIDupdate.vcf.gz")))


##### DV : onlysnp 
import os,glob
dfs = glob.glob("*Deep*.gz")
for df in dfs:
    os.system("bcftools view --max-alleles 2 --exclude-types indels %s -o ./onlySNP/%s"%(df,df.replace(".vcf.gz",".onlySNP.vcf.gz")))



### 비교


cd  /Users/ksmpooh/Desktop/KCDC/long_read/2022/VCF/Final.VCF/onlySNP
0000.vcf - VCF1 만 있는 것
0001.vcf - VCF2 만 있는 것 
0002.vcf - 공통 마커 VCF1
0003.vcf - 공통 마커 VCF2


HLA.Longread.Seq.GATK.recal.pass.sampleIDcheck.onlySNP.SNPIDupdate.vcf.gz
HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.sampleIDCheck.onlySNP.vcf.gz
HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling_unfiltered.updateID.sampleIDcheck.onlySNP.vcf.gz
HLA.Longread.Seq.mapped.Q20.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.sampleIDcheck.onlySNP.SNPIDupdate.vcf.gz
HLA.Shortread.Seq.GATK.recal.pass.onlySNP.SNPIDupdate.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling_unfiltered.updateID.onlySNP.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.GATK_haplotypeCaller_VariantCalling.GATK_CombineGVCF.genotypeGVCF.updateID.onlySNP.SNPIDupdate.vcf.gz

- longread
bcftools isec -p HLA.Longread.Seq.GATK.recal.pass.sampleIDcheck.onlySNP.SNPIDupdate.vcf.gz HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz


- shortread
bcftools isec -p shortread HLA.Shortread.Seq.GATK.recal.pass.onlySNP.SNPIDupdate.vcf.gz HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz

- GATK (long short)
bcftools isec -p GATK HLA.Longread.Seq.GATK.recal.pass.sampleIDcheck.onlySNP.SNPIDupdate.vcf.gz HLA.Shortread.Seq.GATK.recal.pass.onlySNP.SNPIDupdate.vcf.gz

- DV (long short)
bcftools isec -p DV HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.sampleIDCheck.onlySNP.vcf.gz HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz
SnpSift concordance -v ../0002.vcf ../0003.vcf > QulityMetricx_longshort.txt





ls *vcf | xargs -I{} -P 4 bash -c "bcftools query -f '%POS\t%REF\t%ALT\t%AF\n' {} > {}.txt"


mkdir concordance
SnpSift concordance -v ../0002.vcf ../0003.vcf > QulityMetricx_longshort.txt



##### 20221011
long-read ID 변경 후 재진행

103 
cd /DATA/smkim/JG/08.HLAseq/DATA/onlySNP

#head ../long_ID.check.table.txt

OLD_ID	NEW_ID
NIH19KT0247	NIH19KT0247
NIH19KT0248	NIH19KT0248
NIH19KT0249	NIH19KT0249
NIH19KT0252	NIH19KT0252


bcftools reheader --samples ../long_ID.check.table.txt HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz -o HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz
bcftools reheader --samples ../long_ID.check.table.txt HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz -o HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz

cd /DATA/smkim/JG/08.HLAseq/20221011_concordance

- longread
bcftools isec -p longread HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz


- shortread
bcftools isec -p shortread HLA.Shortread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz

- GATK (long short)
bcftools isec -p GATK HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz shortread HLA.Shortread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz

- DV (long short)
bcftools isec -p DV HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz



## KCHIP QC
- SNP ID 변경
R

df <-read.table("JG.HLAseq.intersect.ref.allele.txt",header=T)
ref <-read.table("/BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KORV1_1.na35.annot.extract.txt",header=T)
out <- merge(df,ref[,c(1,10,11)],by.x="V2",by.y="Probe_Set_ID",all.x=T)
ref1<-read.table("/BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KORV1_1.na35.annot.extract.onlyINDEL.txt",header=T)
out1 <- merge(out,ref1[,c(1,7,8)],by.x="V2",by.y="AFFYID",all.x=T)
out1[!(out1$Ref_Allele %in% c("A","G","C","T")),]
write.table(out1,"rough.merge.HLAsnpID.check.v1.txt",col.names=T,row.names=F,sep="\t",quote=F)


python3

import os

def main():
    df = open("rough.merge.HLAsnpID.check.v1.txt","r")
    out = open("kchip.ID.change.for.HLAseq.v2.txt","w")
    header = df.readline()
    header = header.split()
    while 1:
        line = df.readline()
        if not line:
            break
        tmp = line.replace("\n","").split("\t")
        # 14 # 15 NA
        if tmp[header.index("REF")] != "NA" or tmp[header.index("ALT")] != "NA":
            if tmp[header.index("REF")] == tmp[header.index('ref')]:
                id = "6:28477797-33448354_" + tmp[header.index("pos")] + "_"+tmp[header.index("REF")] + "_" + tmp[header.index("ALT")]
            else:
                id = "6:28477797-33448354_" + tmp[header.index("pos")] + "_"+tmp[header.index("ALT")] + "_" + tmp[header.index("REF")]
        #elif (tmp[header.index('Ref_Allele')] == "0" or tmp[header.index('Ref_Allele')] =="0") and :
        elif tmp[header.index('Ref_Allele')]  == tmp[header.index('ref')]:
            id = "6:28477797-33448354_" + tmp[header.index("pos")] + "_"+tmp[header.index("ref")] + "_" + tmp[header.index("Alt_Allele")]
        else:
            id = "6:28477797-33448354_" + tmp[header.index("pos")] + "_"+tmp[header.index("ref")] + "_" + tmp[header.index("Ref_Allele")]

        out.write("%s\t%s\n"%(tmp[0],id))
    out.closed()

main()

- dup pos SNP 제거

python3

df = open("JG.QCed.forHLAseq.bim","r")
out = open("rm_duplist.txt","w")

pos = []
count = 0
while 1:
    line = df.readline()
    if not line:break
    tmp = line.split()
    if tmp[3] in pos:
        count= count + 1
        print(count)
        continue
    pos.append(tmp[3])
    out.write("%s\n"%tmp[1])

out.close()


plink --bfile JG.QCed.forHLAseq --extract rm_duplist.txt --make-bed --out JG.QCed.forHLAseq_rmdup
plink --bfile JG.QCed.forHLAseq_rmdup --update-name kchip.ID.change.for.HLAseq.v2.txt --make-bed --out JG.QCed.forHLAseq_rmdup_updateSNP

plink --bfile JG.QCed.forHLAseq_rmdup_updateSNP --update-chr change.chr.txt --make-bed --out JG.QCed.forHLAseq_rmdup_updateSNP_updatechr --allow-extra-chr


plink --bfile JG.QCed.forHLAseq_rmdup --a2-allele /BDATA/smkim/GWAS/01.QCed_INPUTs/Axiom_KOR.annot.extract.addINDEL.Final.REF.txt --recode vcf --out JG.QCed.forHLAseq_rmdup_convert





cd /DATA/smkim/JG/08.HLAseq/20221011_concordance


bcftools annotate --rename-chrs update.chr JG.QCed.forHLAseq_rmdup_convert.vcf -o JG.QCed.forHLAseq_rmdup_convert_updatechr.vcf


bcftools annotate --set-id '%CHROM\_%POS\_%REF\_%ALT' JG.QCed.forHLAseq_rmdup_convert_updatechr.vcf -o JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID.vcf.gz


bcftools query -l JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID.vcf.gz > sample.v0.txt
awk '{split($1,a,"_"); print $1,a[1]}' sample.v0.txt > sample.v1.txt

header change

bcftools reheader -s sample.v1.txt JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID.vcf.gz -o JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID_updateSampleID.vcf.gz




####### concordance
my mac!!!
cd /Users/ksmpooh/Desktop/KCDC/long_read/2022/VCF/Final.VCF/concordance

HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz
HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz
HLA.Shortread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz
HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz



# longread
bcftools isec -p longread ../v1/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz ../v1/HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz

# shortread
bcftools isec -p shortread ../v1/HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz ../v1/HLA.Shortread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz

# GATK (long short)
bcftools isec -p GATK ../v1/HLA.Longread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate_checksampleID.vcf.gz ../v1/HLA.Shortread.Seq.GATK.recal.pass.onlySNP_SNPIDupdate.vcf.gz

# DV (long short)
bcftools isec -p DV ../v1/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz ../v1/HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz




## with KCHIP (long,short,kchip)

bcftools isec --nfiles 3 -p withKCHIP_DV ../v1/HLA.Longread.Seq.Q20.Deepvariant_Variantcalling.GLnexus_Jointcalling.updateID.onlySNP_checksampleID.vcf.gz ../v1/HLA.Shortread.Seq.align.sorted.dedup.Deepvariant_VariantCalling.GLnexus_Jointcalling.updateID.onlySNP.vcf.gz ../kchip/JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID_updateSampleID.vcf.gz

bcftools isec -p withKCHIP_GATK ./GATK/0002.vcf ./GATK/0003.vcf ../kchip/JG.QCed.forHLAseq_rmdup_convert_updatechr_updateID_updateSampleID.vcf


SnpSift concordance -v ../0002.vcf ../0003.vcf > QulityMetricx_longshort.txt





