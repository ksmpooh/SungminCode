# HLA-LA setting
### 우선 dependancy가 너무 많아서 셋팅이 어렵고, ubuntu 버전이나 gcc 버전 등 여러가지 이유때문에 설치가 잘 안되는 경우가 많은데.. 우선 되는걸로 기록
### 너무 고생했었음...

## HLA LA
https://github.com/DiltheyLab/HLA-LA

### 설치 방법
1. conda 이용
2. 직접 complie


### 1. conda 이용하여 설치

1. conda 가상환경 만들고 실행 (python>=3.6)
conda create -n hla-la python=3.6
conda activate hla-la

2. install hla-la
conda install hla-la 
* 이게 안되는 경우가 많음. dependancy문제 때문에..
* 그때 mamba을 이용하여 install 하면 관련 package가 설치가 됨
* mamba 설치도 conda로 할수 있지만, 시간이 오래 걸리는 경우도 있고, conda env랑 꼬이는 경우가 있음.. 이게 좀 골치아픈데.. 확인해야함
* mamba만 설치되면 hla-la은 쉽게 다운 및 실행 가능
mamba install hla-la

3. 설치되었는지 확인
conda activate hla-la
cd ~/miniconda3/envs/hla-la/opt/hla-la
./bin/HLA-LA --action testBinary

메세지 : HLA*LA binary functional!
위와같이 나오면 설치 잘됨

4. reference 다운 및 indexing
conda activate hla-la
cd ~/miniconda3/envs/hla-la/opt/hla-la #Conda 환경에서 다운로드
mkdir graphs
cd graphs

wget http://www.well.ox.ac.uk/downloads/PRG_MHC_GRCh38_withIMGT.tar.gz
tar -xvzf PRG_MHC_GRCh38_withIMGT.tar.gz

../bin/HLA-LA --action prepareGraph --PRG_graph_dir ../graphs/PRG_MHC_GRCh38_withIMGT



### 2. 직접 complie


#### 0. 사전 준비

g++ with support for C++11 (e.g. 4.7.2)
Boost >= 1.59
Bamtools (now tested with 2.5.1 -- the makefile also contains instructions for older versions)
libz

bwa >= 0.7.12
samtools >= 1.3
picard

0-1. boost 설치
0. 
sudo apt-get update
sudo apt-get install build-essential g++ python-dev autotools-dev libicu-dev libbz2-dev libboost-all-dev

1. boost 다운
https://www.boost.org/users/download/

2. 압축 풀기

tar -xvf boost_1_80_0.tar.gz
cd boost_1_80_0

3. 설치

#./bootstrap.sh --prefix=/usr/ # default로 할 경우
./bootstrap.sh --prefix=/BDATA/smkim/TOOLs/boost_1_81_0/ # 설치 폴더 설정

./b2
sudo ./b2 install

0-2. bamtools 설치
https://github.com/pezmaster31/bamtools/wiki/Building-and-installing

1. bamtools 다운
git clone https://github.com/pezmaster31/bamtools.git

2. CMAKE 버전 확인 후 다운 >=3.0
cmake --version

3. build bamtools
cd bamtools
mkdir build
cd build
cmake -DCMAKE_INSTALL_PREFIX=./

4. install bamtools
make DESTDIR=../ install



#### 1. HLA-LA 설치

1. 설치
mkdir HLA-LA HLA-LA/bin HLA-LA/src HLA-LA/obj HLA-LA/temp HLA-LA/working HLA-LA/graphs
cd HLA-LA/src; git clone https://github.com/DiltheyLab/HLA-LA.git

make all BOOST_PATH=/BDATA/smkim/TOOLs/boost_1_81_0 BAMTOOLS_PATH=/BDATA/smkim/TOOLs/bamtools

2. 설치되었는지 확인
../bin/HLA-LA --action testBinary

메세지 : HLA*LA binary functional!
위와같이 나오면 설치 잘됨

#### 2. reference File 다운 및 indexing

1. 다운
cd HLA-LA/graphs
wget http://www.well.ox.ac.uk/downloads/PRG_MHC_GRCh38_withIMGT.tar.gz
tar -xvzf PRG_MHC_GRCh38_withIMGT.tar.gz

2. indexing
../bin/HLA-LA --action prepareGraph --PRG_graph_dir ../graphs/PRG_MHC_GRCh38_withIMGT


#### 3. test
wget https://www.dropbox.com/s/xr99u3vqaimk4vo/NA12878.mini.cram?dl=0
mv NA12878.mini.cram?dl=0 NA12878.mini.cram
samtools index NA12878.mini.cram
./HLA-LA.pl --BAM NA12878.mini.cram --graph PRG_MHC_GRCh38_withIMGT --sampleID NA12878 --maxThreads 7


### 3. 실행

# conda 실행
conda activate hla-la  
* /BDATA/smkim/TOOLs/HLA-LA/src/paths.ini 이거를 설정하면 굳이 할 필요 없는데, 필요한 package가 다 설치되어 있어서 conda activate로 실행하고 분석 수행


# indexing
samtools index input.bam

# HLA-LA 실행

/BDATA/smkim/TOOLs/HLA-LA/src/HLA-LA.pl \ # 실행 파일, 경로는 109, 106 동일함
--workingDir /BDATA/smkim/HLAinfer/test \ # working directory, 본인이 원하는 폴더 설정
--BAM NA12878.mini.cram \ #working direcotry에 bam 또는 cram이 있어야함. samtools index 처리한 input 파일
--graph PRG_MHC_GRCh38_withIMGT \ 이건 기본 설정
--sampleID NA12878 \ #sample ID working Dir에 해당이름의 폴더 생상됨, 결과파일 저장
--maxThreads 32 \ # thread 수

# 만약 위에가 안될경우 아래를 추가하여 수행
--samtools_T /path/to/GRCh38_full_analysis_set_plus_decoy_hla.fa

